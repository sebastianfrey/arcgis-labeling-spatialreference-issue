import{hs as s,ht as V,e_ as y}from"./index-Cf67L9ml.js";import{a as b}from"./CIMSymbolHelper-Cora_Njn.js";import{CIMSymbolRasterizer as q}from"./CIMSymbolRasterizer-lFyKpl1o.js";import{y as D}from"./OverrideHelper-zt5G9yD6.js";import{t as S,l as E}from"./symbolUtils-3TAv1Cwp.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-B55So5rc.js";import"./GeometryUtils-Cj1Ze3T6.js";import"./rasterizingUtils-heiW8PKS.js";import"./floatRGBA-18oZY0RD.js";import"./Rect-CUzevAry.js";import"./BoundingBox-CUQpoh07.js";import"./CIMResourceManager-CPqVIdx4.js";import"./colorUtils-BvMoCY37.js";import"./quantizationUtils-Bh1RVRcN.js";import"./utils-CL36WIO8.js";import"./cimSymbolUtils-TzjN9ZKv.js";import"./utils-C6HuIF-b.js";import"./webStyleSymbolUtils-jGAPsZrq.js";import"./devEnvironmentUtils-CnNDiFMM.js";import"./webStyleAcceptedFormats-CG7ZQ6BV.js";const f=new q(null),u=s(S.size),G=s(S.maxSize),M=s(S.lineWidth),U=1;async function k(r,e,m){const i=e==null?void 0:e.size;let t=i!=null&&typeof i=="object"&&"width"in i?i.width:i,a=i!=null&&typeof i=="object"&&"height"in i?i.height:i;if(t==null||a==null)if(m==="esriGeometryPolygon")t=a=e.maxSize?Math.min(e.maxSize,u):u;else{const o=await A(r,e,m);o&&(t=o.width,a=o.height),m==="esriGeometryPolyline"&&(t=e.maxSize?Math.min(e.maxSize,M):M),t=t!=null&&isFinite(t)?Math.min(t,G):u,a=a!=null&&isFinite(a)?Math.max(Math.min(a,G),U):u}return e.style==="legend"&&m==="esriGeometryPolyline"&&(t=M),{width:t,height:a}}async function A(r,e,m){const{feature:i,fieldMap:t,viewParams:a}=e.cimOptions||e,o=await D.resolveSymbolOverrides(r.data,i,null,t,m,null,a);if(!o)return null;(r=r.clone()).data={type:"CIMSymbolReference",symbol:o},r.data.primitiveOverrides=void 0;const l=[];return b.fetchResources(o,f.resourceManager,l),b.fetchFonts(o,f.resourceManager,l),l.length>0&&await Promise.all(l),b.getEnvelope(o,null,f.resourceManager)}async function me(r,e={}){var z,P;const{node:m,opacity:i,symbolConfig:t}=e,a=t!=null&&typeof t=="object"&&"isSquareFill"in t&&t.isSquareFill,o=e.cimOptions||e,l=o.geometryType||V((z=r==null?void 0:r.data)==null?void 0:z.symbol),n=await k(r,e,l),{feature:I,fieldMap:L}=o,F=e!=null&&e.geometry||a||l!=="esriGeometryPolygon"?"preview":"legend";let v=n;const x=n;if(e!=null&&e.geometry&&(l==="esriGeometryPolygon"||l==="esriGeometryPolyline")&&(y(n.width)<200||y(n.height)<200)){const R=n.width>n.height?s(200)*n.height/n.width:s(200);v={width:n.width>n.height?s(200):s(200)*n.width/n.height,height:R}}const g=await f.rasterizeCIMSymbolAsync(r,I,v,F,L,l,null,o.viewParams,o.allowScalingUp,(P=e==null?void 0:e.geometry)==null?void 0:P.toJSON());if(!g)return null;const{width:O,height:j}=g,c=document.createElement("canvas");c.width=O,c.height=j,c.getContext("2d").putImageData(g,0,0);const d=y(x.width),w=y(x.height),h=new Image(d,w);h.src=c.toDataURL(),h.ariaLabel=e.ariaLabel??null,h.alt=e.ariaLabel??"",i!=null&&(h.style.opacity=`${i}`);let p=h;if(e.effectView!=null){const C={shape:{type:"image",x:0,y:0,width:d,height:w,src:h.src},fill:null,stroke:null,offset:[0,0]};p=E([[C]],[d,w],{effectView:e.effectView,ariaLabel:e.ariaLabel})}return m&&p&&m.appendChild(p),p}export{me as previewCIMSymbol};
