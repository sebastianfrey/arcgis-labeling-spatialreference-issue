import{W as p,Z as y,dR as L,aa as j,gn as B,iO as D,am as J,ap as M,jU as $,jV as w,as as x,dL as u,ad as T,a4 as O,d as C,ga as W,aV as R,eD as q,a1 as A,gO as _,e4 as V,dJ as H,gP as k,ak as K,b as Q}from"./index-BFudLC3v.js";import{s as I}from"./Sublayer-C63BJ6VD.js";import{o as U}from"./sublayerUtils-CYcA28UC.js";const Y=d=>{let a=class extends d{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(r,s){const e=s.capabilities&&s.capabilities.split(",").map(N=>N.toLowerCase().trim());if(!e)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const t=this.type,i=t!=="tile"&&!!s.supportsDynamicLayers,o=e.includes("query"),n=e.includes("map"),f=!!s.exportTilesAllowed,b=e.includes("tilemap"),m=e.includes("data"),S=t!=="tile"&&(!s.tileInfo||i),v=t!=="tile"&&(!s.tileInfo||i),l=t!=="tile",c=t!=="tile"&&i&&s.currentVersion>=11.1,h=s.cimVersion?$.parse(s.cimVersion):null,E=(h==null?void 0:h.greaterEqual(1,4))??!1,F=(h==null?void 0:h.greaterEqual(2,0))??!1;return{operations:{supportsExportMap:n,supportsExportTiles:f,supportsIdentify:o,supportsQuery:m,supportsTileMap:b},exportMap:n?{supportsArcadeExpressionForLabeling:E,supportsCIMSymbols:F,supportsDynamicLayers:i,supportsSublayerOrderBy:c,supportsSublayerDefinitionExpression:v,supportsSublayerVisibility:S,supportsSublayersChanges:l}:null,exportTiles:f?{maxExportTilesCount:+s.maxExportTilesCount}:null}}readVersion(r,s){let e=s.currentVersion;return e||(e=s.hasOwnProperty("capabilities")||s.hasOwnProperty("tables")?10:s.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),e}async fetchRelatedService(r){const s=this.portalItem;if(!s||!w(s))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=s.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},r).then(t=>t.find(i=>i.type==="Feature Service")??null,()=>null));const e=await this._relatedFeatureServicePromise;return x(r),e?{itemId:e.id,url:e.url}:null}async fetchSublayerInfo(r,s){var o;const{source:e}=r;if(this!=null&&this.portalItem&&this.type==="tile"&&(e==null?void 0:e.type)==="map-layer"&&w(this.portalItem)&&r.originIdOf("url")<u.SERVICE){const n=await this.fetchRelatedService(s);n&&(r.url=T(n.url,e.mapLayerId.toString()),r.layerItemId=n.itemId)}const{url:t}=r;let i;if(e.type==="data-layer")i=(await O(t,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...s})).data;else if(t&&r.originIdOf("url")>u.SERVICE)try{const n=await this._fetchAllLayersAndTablesFromService(t),f=((o=C(t))==null?void 0:o.sublayer)??e.mapLayerId;i=n.get(f)}catch{}else{let n=r.id;(e==null?void 0:e.type)==="map-layer"&&(n=e.mapLayerId);try{i=(await this.fetchAllLayersAndTables(s)).get(n)}catch{}}return i}async fetchAllLayersAndTables(r){var s;return this._fetchAllLayersAndTablesFromService((s=this.parsedUrl)==null?void 0:s.path,r)}async _fetchAllLayersAndTablesFromService(r,s){await this.load(s),this._allLayersAndTablesMap||(this._allLayersAndTablesMap=new Map);const e=C(r),t=W(this._allLayersAndTablesMap,e==null?void 0:e.url.path,()=>O(T(e==null?void 0:e.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(o=>{const n=new Map,{layers:f,tables:b}=o.data,m=[...f??[],...b??[]];for(const S of m)n.set(S.id,S);return{result:n}},o=>({error:o}))),i=await t;if(x(s),"result"in i)return i.result;throw i.error}};return p([y({readOnly:!0})],a.prototype,"capabilities",void 0),p([L("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],a.prototype,"readCapabilities",null),p([y({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),p([y({type:j})],a.prototype,"fullExtent",void 0),p([y(B)],a.prototype,"id",void 0),p([y({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],a.prototype,"legendEnabled",void 0),p([y(D)],a.prototype,"popupEnabled",void 0),p([y({type:J})],a.prototype,"spatialReference",void 0),p([y({readOnly:!0})],a.prototype,"version",void 0),p([L("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],a.prototype,"readVersion",null),a=p([M("esri.layers.mixins.ArcGISMapService")],a),a};function G(d,a){const r=[],s={};return d&&d.forEach(e=>{const t=new I;if(t.read(e,a),s[t.id]=t,e.parentLayerId!=null&&e.parentLayerId!==-1){const i=s[e.parentLayerId];i.sublayers||(i.sublayers=[]),i.sublayers.unshift(t)}else r.unshift(t)}),r}const g=R.ofType(I);function P(d,a){d&&d.forEach(r=>{a(r),r.sublayers&&r.sublayers.length&&P(r.sublayers,a)})}const ee=d=>{let a=class extends d{constructor(...r){super(...r),this.allSublayers=new q({getCollections:()=>[this.sublayers],getChildrenFunction:s=>s.sublayers}),this.sublayersSourceJSON={[u.SERVICE]:{},[u.PORTAL_ITEM]:{},[u.WEB_SCENE]:{},[u.WEB_MAP]:{}},this.subtables=null,this.addHandles([A(()=>this.sublayers,(s,e)=>this._handleSublayersChange(s,e),_),A(()=>this.subtables,(s,e)=>this._handleSublayersChange(s,e),_)])}destroy(){this.allSublayers.destroy()}readSublayers(r,s){if(!s||!r)return;const{sublayersSourceJSON:e}=this,t=V(s.origin);if(t<u.SERVICE||(e[t]={context:s,visibleLayers:r.visibleLayers||e[t].visibleLayers,layers:r.layers||e[t].layers},t>u.SERVICE))return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:i,origin:o}=this.createSublayersForOrigin("web-document"),n=H(this);n.setDefaultOrigin(o),this._set("sublayers",new g(i)),n.setDefaultOrigin("user")}findSublayerById(r){return this.allSublayers.find(s=>s.id===r)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(r){const s=V(r==="web-document"?"web-map":r);let e=u.SERVICE,t=this.sublayersSourceJSON[u.SERVICE].layers,i=this.sublayersSourceJSON[u.SERVICE].context,o=null;const n=[u.PORTAL_ITEM,u.WEB_SCENE,u.WEB_MAP].filter(l=>l<=s);for(const l of n){const c=this.sublayersSourceJSON[l];U(c.layers)&&(e=l,t=c.layers,i=c.context,c.visibleLayers&&(o={visibleLayers:c.visibleLayers,context:c.context}))}const f=[u.PORTAL_ITEM,u.WEB_SCENE,u.WEB_MAP].filter(l=>l>e&&l<=s);let b=null;for(const l of f){const{layers:c,visibleLayers:h,context:E}=this.sublayersSourceJSON[l];c&&(b={layers:c,context:E}),h&&(o={visibleLayers:h,context:E})}const m=G(t,i),S=new Map,v=new Set;if(b)for(const l of b.layers)S.set(l.id,l);if(o!=null&&o.visibleLayers)for(const l of o.visibleLayers)v.add(l);return P(m,l=>{b&&l.read(S.get(l.id),b.context),o&&l.read({defaultVisibility:v.has(l.id)},o.context)}),{origin:k(e),sublayers:new g({items:m})}}read(r,s){super.read(r,s),this.readSublayers(r,s)}_handleSublayersChange(r,s){s&&(s.forEach(e=>{e.parent=null,e.layer=null}),this.removeHandles("sublayers-owner")),r&&(r.forEach(e=>{e.parent=this,e.layer=this}),this.addHandles([r.on("after-add",({item:e})=>{e.parent=this,e.layer=this}),r.on("after-remove",({item:e})=>{e.parent=null,e.layer=null})],"sublayers-owner"),this.type==="tile"&&this.addHandles(r.on("before-changes",e=>{K.getLogger("esri.layers.TileLayer").error(new Q("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()}),"sublayers-owner"))}};return p([y({readOnly:!0})],a.prototype,"allSublayers",void 0),p([y({readOnly:!0,type:R.ofType(I)})],a.prototype,"serviceSublayers",void 0),p([y({value:null,type:g,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],a.prototype,"sublayers",void 0),p([y({readOnly:!0})],a.prototype,"sublayersSourceJSON",void 0),p([y({type:g,json:{read:{source:"tables"}}})],a.prototype,"subtables",void 0),a=p([M("esri.layers.mixins.SublayersOwner")],a),a};export{Y as f,ee as m};
