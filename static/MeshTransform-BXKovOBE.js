import{el as j,gt as k,gu as q,gv as z,gw as B,gx as C,f1 as d,ak as s,al as e,dk as I,a$ as D,gy as F,b0 as G,eg as l,gz as H,eC as P,gA as T,am as U}from"./index-Dc2kMMi_.js";import{e as f}from"./mat4f64-CSKppSlJ.js";import{v,b as p,x as E}from"./quat-DHyZyDt_.js";import{e as m}from"./quatf64-aQ5IuZRd.js";function a(t=w){return[t[0],t[1],t[2],t[3]]}function c(t,o,n=a()){return j(n,t),n[3]=o,n}function R(t,o=a()){const n=C(i,t);return M(o,d(v(o,n))),o}function y(t,o,n=a()){return p(i,t,h(t)),p(A,o,h(o)),E(i,A,i),M(n,d(v(n,i)))}function S(t,o,n,x=a()){return c(k,t,u),c(q,o,$),c(z,n,b),y(u,$,u),y(u,b,x),x}function V(t){return t}function J(t){return t[3]}function h(t){return B(t[3])}function M(t,o){return t[3]=o,t}const w=[0,0,1,0],i=m(),A=m();a();const u=a(),$=a(),b=a();var g;let r=g=class extends I{constructor(t){super(t),this.translation=D(),this.rotationAxis=F(w),this.rotationAngle=0,this.scale=G(1,1,1)}get rotation(){return c(this.rotationAxis,this.rotationAngle)}set rotation(t){this.rotationAxis=l(t),this.rotationAngle=J(t)}get localMatrix(){const t=f();return p(N,this.rotation,h(this.rotation)),H(t,N,this.translation,this.scale),t}get localMatrixInverse(){return P(f(),this.localMatrix)}equals(t){return this===t||t!=null&&T(this.localMatrix,t.localMatrix)}clone(){const t={translation:l(this.translation),rotationAxis:l(this.rotationAxis),rotationAngle:this.rotationAngle,scale:l(this.scale)};return new g(t)}};s([e({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"translation",void 0),s([e({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"rotationAxis",void 0),s([e({type:Number,nonNullable:!0,json:{write:!0}})],r.prototype,"rotationAngle",void 0),s([e({type:[Number],nonNullable:!0,json:{write:!0}})],r.prototype,"scale",void 0),s([e()],r.prototype,"rotation",null),s([e()],r.prototype,"localMatrix",null),s([e()],r.prototype,"localMatrixInverse",null),r=g=s([U("esri.geometry.support.MeshTransform")],r);const N=m(),W=r;export{W as N,S as d,a as j,R as k,V as w,h as z};
