import{o as R}from"./floatRGBA-18oZY0RD.js";import{iu as b,ak as $,iv as A,iw as I}from"./index-Cf67L9ml.js";const z=15.5,x=4,U=64,V=1024,T=()=>$.getLogger("esri.symbols.cim.rasterizingUtils"),L=32,P=t=>t==="vertical"||t==="horizontal"||t==="cross"||t==="esriSFSCross"||t==="esriSFSVertical"||t==="esriSFSHorizontal";function O(t,i,r){const e=i.style,a=A(Math.ceil(r)),o=P(e)?8*a:16*a,n=2*a;t.width=o,t.height=o;const s=t.getContext("2d");s.strokeStyle="#ffffff",s.lineWidth=a,s.beginPath(),e!=="vertical"&&e!=="cross"&&e!=="esriSFSCross"&&e!=="esriSFSVertical"||(s.moveTo(o/2,-n),s.lineTo(o/2,o+n)),e!=="horizontal"&&e!=="cross"&&e!=="esriSFSCross"&&e!=="esriSFSHorizontal"||(s.moveTo(-n,o/2),s.lineTo(o+n,o/2)),e!=="backward-diagonal"&&e!=="diagonal-cross"&&e!=="esriSFSDiagonalCross"&&e!=="esriSFSBackwardDiagonal"||(s.moveTo(-n,-n),s.lineTo(o+n,o+n),s.moveTo(o-n,-n),s.lineTo(o+n,n),s.moveTo(-n,o-n),s.lineTo(n,o+n)),e!=="forward-diagonal"&&e!=="diagonal-cross"&&e!=="esriSFSForwardDiagonal"&&e!=="esriSFSDiagonalCross"||(s.moveTo(o+n,-n),s.lineTo(-n,o+n),s.moveTo(n,-n),s.lineTo(-n,n),s.moveTo(o+n,o-n),s.lineTo(o-n,o+n)),s.stroke();const h=s.getImageData(0,0,t.width,t.height),l=new Uint8Array(h.data);let f;for(let c=0;c<l.length;c+=4)f=l[c+3]/255,l[c]=l[c]*f,l[c+1]=l[c+1]*f,l[c+2]=l[c+2]*f;return[l,t.width,t.height,a]}function W(t){t.length%2==1&&(t=[...t,...t]);const i=t.reduce((c,u)=>c+u,0),r=Math.round(i*x),e=1,a=new Float32Array(r*e);let o=0,n=0,s=.5,h=!0;for(const c of t){for(o=n,n+=c*x;s<=n;){const u=s-.5,m=Math.min(Math.abs(s-o),Math.abs(s-n));a[u]=h?-m:m,s++}h=!h}const l=a.length,f=new Uint8Array(4*l);for(let c=0;c<l;++c){const u=a[c]/x;R(u/U*.5+.5,f,4*c)}return[f,r,e]}function j(t,i){t==null&&(t=[]);const r=i==="Butt",e=i==="Square",a=!r&&!e;t.length%2==1&&(t=[...t,...t]);const o=z,n=2*o;let s=0;for(const g of t)s+=g;const h=Math.round(s*o),l=new Float32Array(h*n),f=.5*o;let c=0,u=0,m=.5,M=!0;for(const g of t){for(c=u,u+=g*o;m<=u;){let C=.5;for(;C<n;){const D=(C-.5)*h+m-.5,d=a?(C-o)*(C-o):Math.abs(C-o);l[D]=M?r?Math.max(Math.max(c+f-m,d),Math.max(m-u+f,d)):d:a?Math.min((m-c)*(m-c)+d,(m-u)*(m-u)+d):e?Math.min(Math.max(m-c,d),Math.max(u-m,d)):Math.min(Math.max(m-c+f,d),Math.max(u+f-m,d)),C++}m++}M=!M}const F=l.length,v=new Uint8Array(4*F);for(let g=0;g<F;++g){const C=(a?Math.sqrt(l[g]):l[g])/o;R(C,v,4*g)}return[v,h,n]}function J(t,i){const{colorRamp:r,gradientType:e}=i,a=r.type==="CIMFixedColorRamp",o=i.interval||b.CIMGradientFill.interval;let n=w(r);return a&&(n=N(n,o)),e==="Discrete"||a?E(t,n,o):q(t,n)}let y;function K(t,i){const{colorRamp:r,gradientType:e}=i,a=w(r),o=r.type==="CIMFixedColorRamp";if(e==="Continuous"&&!o)return p(t,a);const n=i.interval??b.CIMGradientFill.interval;if(o)return p(t,N(a,n));const s=[];y??(y=document.createElement("canvas")),S(y,a,n,1,0);const h=y.getContext("2d").getImageData(0,0,n,1).data;for(let l=0,f=0;l<n;l++,f=4*l){const c=[h[f+0],h[f+1],h[f+2],h[f+3]];s.push({offset:l/n,color:c}),s.push({offset:(l+1)/n,color:c})}return p(t,s)}function w(t){const i=[];switch(t.type){case"CIMPolarContinuousColorRamp":case"CIMLinearContinuousColorRamp":{t.type==="CIMPolarContinuousColorRamp"&&T().warnOnce("CIMPolarContinuousColorRamp is currently unsupported. Falling back to CIMLinearContinuousColorRamp.");const r=t;i.push({offset:0,color:[r.fromColor[0],r.fromColor[1],r.fromColor[2],r.fromColor[3]/255]}),i.push({offset:1,color:[r.toColor[0],r.toColor[1],r.toColor[2],r.toColor[3]/255]});break}case"CIMFixedColorRamp":{const r=t,e=1/(r.colors.length-1);let a=0;for(const o of r.colors)i.push({offset:a,color:[o[0],o[1],o[2],o[3]/255]}),a+=e;break}case"CIMMultipartColorRamp":{const r=t,e=r.weights.reduce((o,n)=>o+n,0);let a=0;for(let o=0;o<r.colorRamps.length;o++){const n=r.colorRamps[o],s=r.weights[o],h=w(n);for(const l of h)i.push({offset:(a+l.offset*s)/e,color:l.color});a+=s}break}default:T().error(`Color ramp "${t.type}" currently unsupported.`)}return i}function N(t,i){const r=[],e=(t.length-1)/(i-1);for(let a=0;a<i;a++){const o=t[Math.round(a*e)].color;r.push({offset:a/i,color:o}),r.push({offset:(a+1)/i,color:o})}return r}function q(t,i){return S(t,i,L,1,I),k(t)}function E(t,i,r){return S(t,i,r,1,I),k(t)}function p(t,i,r=0){for(const{offset:e,color:a}of i)t.addColorStop(Math.min(Math.max(e,r),1-r),`rgba(${a[0]}, ${a[1]}, ${a[2]}, ${a[3]})`)}function S(t,i,r,e,a){const o=r+2*a;t.width=o,t.height=e;const n=(a+1)/o,s=t.getContext("2d",{willReadFrequently:!0});if(i.length>0){const h=s.createLinearGradient(0,0,o,e);p(h,i,n),s.fillStyle=h}else s.fillStyle="rgba(128, 128, 128, 1)";s.fillRect(0,0,o,e)}function k(t){const{width:i,height:r}=t,e=t.getContext("2d").getImageData(0,0,i,r),a=new Uint8Array(e.data);for(let o=0;o<a.length;o+=4){const n=a[o+3]/255;a[o]*=n,a[o+1]*=n,a[o+2]*=n}return[a,i,r]}function G(t){var a,o,n,s;const i=((o=(a=t[0])==null?void 0:a[0])==null?void 0:o[0])??0,r=((s=(n=t[0])==null?void 0:n[0])==null?void 0:s[1])??0,e={ymin:r,xmin:i,ymax:r,xmax:i,width:0,height:0};for(let h=0;h<t.length;h++){const l=t[h];for(let f=0;f<l.length;f++){const c=l[f][0],u=l[f][1];c<e.xmin&&(e.xmin=c),c>e.xmax&&(e.xmax=c),u<e.ymin&&(e.ymin=u),u>e.ymax&&(e.ymax=u)}}return e.width=Math.abs(e.xmax-e.xmin),e.height=Math.abs(e.ymax-e.ymin),e}function Q(t,i){const r=G(t),e=r.width===0?1:r.width,a=r.height===0?1:r.height,o=[];for(let n=0;n<t.length;n++){const s=t[n],h=[];for(let l=0;l<s.length;l++){let f=Math.round(s[l][0]-r.xmin),c=Math.round(s[l][1]-r.ymin);if(f=i.xmin+f*i.width/e,c=i.ymin+c*i.height/a,isNaN(f)||isNaN(c))throw new Error("Scaled shape has NaN values");h.push([f,c])}o.push(h)}return o}function X(t,i,r){const e=[];for(let a=0;a<t.length;a++){const o=t[a],n=[];for(let s=0;s<o.length;s++){const h=o[s][0]+i,l=o[s][1]+r;if(isNaN(h)||isNaN(l))throw new Error("Scaled shape has NaN values");n.push([h,l])}e.push(n)}return e}export{X as R,Q as T,U as c,V as e,O as f,J as g,W as m,K as p,x as t,j as u};
