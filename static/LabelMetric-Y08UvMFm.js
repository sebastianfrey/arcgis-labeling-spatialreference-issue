import{s as T,cV as l,aj as U,mA as b,cT as x,cY as L,bI as Y,b8 as c}from"./index-Dc2kMMi_.js";import"./Program-CL80zIIj.js";import{t as B}from"./VertexElementDescriptor-BOD-G50G.js";import{i as P}from"./BoundingBox-DCdfa0q4.js";let d=class p{constructor(t,e,r,s,i,a,o){this.instanceId=t,this.textureKey=e,this.indexStart=r,this.indexCount=s,this.vertexStart=i,this.vertexCount=a,this.overlaps=o}updateBaseOffsets(t){this.vertexStart+=t.vertexFrom,this.indexStart+=t.indexFrom}clone(){return new p(this.instanceId,this.textureKey,this.indexStart,this.indexCount,this.vertexStart,this.vertexCount,this.overlaps)}static write(t,e,r,s,i,a,o,u){t.push(e),t.push(r),t.push(s),t.push(i),t.push(a),t.push(o),t.push(u)}serialize(t){return t.push(this.instanceId),t.push(this.textureKey),t.push(this.indexStart),t.push(this.indexCount),t.push(this.vertexStart),t.push(this.vertexCount),t.push(this.overlaps),t}static deserialize(t){const e=t.readInt32(),r=t.readInt32(),s=t.readInt32(),i=t.readInt32(),a=t.readInt32(),o=t.readInt32(),u=t.readInt32();return new p(e,r,s,i,a,o,u)}};d.byteSizeHint=7*Uint32Array.BYTES_PER_ELEMENT;function I(n,t){if(t!==null){n.push(t.length);for(const e of t)e.serialize(n);return n}n.push(0)}function S(n,t,e){const r=n.readInt32(),s=new Array(r);for(let i=0;i<s.length;i++)s[i]=t.deserialize(n,e);return s}let R=class _{constructor(t,e){this.id=t,this.sortKey=e,this.records=[]}serialize(t){return t.push(this.id),t.writeF32(this.sortKey),I(t,this.records),t}static deserialize(t){const e=t.readInt32(),r=t.readF32(),s=new _(e,r);return s.records=S(t,d)??[],s}};R.byteSizeHint=2*Uint32Array.BYTES_PER_ELEMENT+d.byteSizeHint;const F=()=>U.getLogger("esri.views.2d.engine.webgl.Utils");function q(n){switch(n){case l.UNSIGNED_BYTE:return 1;case l.UNSIGNED_SHORT_4_4_4_4:return 2;case l.FLOAT:return 4;default:return void F().error(new T("webgl-utils",`Unable to handle type ${n}`))}}function V(n){switch(n){case l.UNSIGNED_BYTE:return Uint8Array;case l.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case l.FLOAT:return Float32Array;default:return void F().error(new T("webgl-utils",`Unable to handle type ${n}`))}}function k(n){const t=new Map;for(const e in n){const r=n[e];let s=0;t.set(e,r.map(i=>{const a=new B(i.name,i.count,i.type,s,0,i.normalized||!1);return s+=i.count*b(i.type),a})),t.get(e).forEach(i=>i.stride=s)}return t}const C=n=>{const t=new Map;for(const e in n)for(const r of n[e])t.set(r.name,r.location);return t},v=n=>{const t={};return n.forEach((e,r)=>t[r]=e!=null&&e.length?e[0].stride:0),t},E=new Map,W=(n,t)=>{if(!E.has(n)){const e=k(t),r={strides:v(e),bufferLayouts:e,attributes:C(t)};E.set(n,r)}return E.get(n)},J=n=>n.includes("data:image/svg+xml");function Q(n){const t=[];for(let e=0;e<n.length;e++)t.push(n.charCodeAt(e));return t}function Z(n,t,e){const r=new x(t.width,t.height);return r.dataType=t.dataType,t.depth&&(r.depth=t.depth),t.flipped&&(r.flipped=t.flipped),t.hasMipmap&&(r.hasMipmap=t.hasMipmap),r.internalFormat=t.internalFormat,t.isImmutable&&(r.isImmutable=t.isImmutable),t.isOpaque&&(r.isOpaque=t.isOpaque),t.maxAnisotropy&&(r.maxAnisotropy=t.maxAnisotropy),r.pixelFormat=t.pixelFormat,t.preMultiplyAlpha&&(r.preMultiplyAlpha=t.preMultiplyAlpha),t.samplingMode&&(r.samplingMode=t.samplingMode),t.target&&(r.target=t.target),r.uniform=t.uniform,t.unpackAlignment&&(r.unpackAlignment=t.unpackAlignment),t.wrapMode&&(r.wrapMode=t.wrapMode),new L(n,r,e)}function $(n){return"url"in n&&"urlHash"in n?{...n,url:""}:n}const M=new Float32Array(1),O=new Uint32Array(M.buffer);function z(n){return M[0]=n,O[0]}function tt(n,t){return 65535&n|t<<16}function y(n){const t=z(n),e=t>>>31;let r=t>>>23&255,s=8388607&t;return r-=127,r>15?e<<15|31744:r<-25?0:(r<-14&&(s+=8388608,s/=2**(-14-r),r=-15),r+=15,s/=8192,s=H(s,1023),e<<15|r<<10|s)}function H(n,t){const e=Math.floor(n),r=n-e;return e<t&&(r>.5||r===.5&&e%2==1)?e+1:e}function m(n){let t=n>>>15,e=n>>10&31,r=1023&n;return t=t?-1:1,e-=15,r/=1024,e>-15?r+=1:e=-14,t*2**e*r}function et(n){const t=n.map(({name:e,count:r,type:s})=>`${e}.${r}.${s}`).join(",");return Y(t)}function f(n,t,e,r,s,i,a){if(n.primitiveName===t){let o=r==null?void 0:r.readWithDefault(s,i,n[e]&&a);return n.type==="text"&&(o=o.toString()),void(n[e]=o)}if("type"in n&&n.type!=null){if(n.effects)for(const o of n.effects)f(o,t,e,r,s,i,a);switch(n.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(n.symbolLayers)for(const o of n.symbolLayers)f(o,t,e,r,s,i,a);break;case"CIMTextSymbol":n.symbol&&f(n.symbol,t,e,r,s,i,a);break;case"CIMHatchFill":n.lineSymbol&&f(n.lineSymbol,t,e,r,s,i,a);break;case"CIMPictureMarker":case"CIMCharacterMarker":case"CIMVectorMarker":if(n.markerPlacement&&f(n.markerPlacement,t,e,r,s,i,a),n.type==="CIMVectorMarker"&&n.markerGraphics)for(const o of n.markerGraphics)f(o,t,e,r,s,i,a),f(o.symbol,t,e,r,s,i,a)}}}const G=400;function nt(n){const t=n.width;return n.effects!=null?G:Math.max(1.25*t,8)}function rt(n,t,e,r){const s=e.packPrecisionFactor??1;switch(e.type){case c.BYTE:if(e.count===1)n.setInt8(r+e.offset,t*s);else for(let i=0;i<e.count;i++){const a=i*Int8Array.BYTES_PER_ELEMENT;n.setInt8(r+e.offset+a,t[i]*s)}break;case c.UNSIGNED_BYTE:if(e.count===1)n.setUint8(r+e.offset,t*s);else for(let i=0;i<e.count;i++){const a=i*Uint8Array.BYTES_PER_ELEMENT;n.setUint8(r+e.offset+a,t[i]*s)}break;case c.SHORT:if(e.count===1)n.setInt16(r+e.offset,t*s,!0);else for(let i=0;i<e.count;i++){const a=i*Int16Array.BYTES_PER_ELEMENT;n.setInt16(r+e.offset+a,t[i]*s,!0)}break;case c.UNSIGNED_SHORT:if(e.count===1)n.setUint16(r+e.offset,t*s,!0);else for(let i=0;i<e.count;i++){const a=i*Uint16Array.BYTES_PER_ELEMENT;n.setUint16(r+e.offset+a,t[i]*s,!0)}break;case c.INT:if(e.count===1)n.setInt32(r+e.offset,t*s,!0);else for(let i=0;i<e.count;i++){const a=i*Int32Array.BYTES_PER_ELEMENT;n.setInt32(r+e.offset+a,t[i]*s,!0)}break;case c.UNSIGNED_INT:if(e.count===1)n.setUint32(r+e.offset,t*s,!0);else for(let i=0;i<e.count;i++){const a=i*Uint32Array.BYTES_PER_ELEMENT;n.setUint32(r+e.offset+a,t[i]*s,!0)}break;case c.FLOAT:if(e.count===1)n.setFloat32(r+e.offset,t*s,!0);else for(let i=0;i<e.count;i++){const a=i*Float32Array.BYTES_PER_ELEMENT;n.setFloat32(r+e.offset+a,t[i]*s,!0)}break;case c.HALF_FLOAT:if(e.count===1)n.setUint16(r+e.offset,y(t*s),!0);else for(let i=0;i<e.count;i++){const a=i*Uint16Array.BYTES_PER_ELEMENT;n.setUint16(r+e.offset+a,y(t[i]*s),!0)}}}function st(n,t,e){switch(t.type){case c.BYTE:{if(t.count===1)return n.getInt8(e+t.offset);const r=[];for(let s=0;s<t.count;s++){const i=s*Int8Array.BYTES_PER_ELEMENT;r.push(n.getInt8(e+t.offset+i))}return r}case c.UNSIGNED_BYTE:{if(t.count===1)return n.getUint8(e+t.offset);const r=[];for(let s=0;s<t.count;s++){const i=s*Uint8Array.BYTES_PER_ELEMENT;r.push(n.getUint8(e+t.offset+i))}return r}case c.SHORT:{if(t.count===1)return n.getInt16(e+t.offset,!0);const r=[];for(let s=0;s<t.count;s++){const i=s*Int16Array.BYTES_PER_ELEMENT;r.push(n.getInt16(e+t.offset+i,!0))}return r}case c.UNSIGNED_SHORT:{if(t.count===1)return n.getUint16(e+t.offset,!0);const r=[];for(let s=0;s<t.count;s++){const i=s*Uint16Array.BYTES_PER_ELEMENT;r.push(n.getUint16(e+t.offset+i,!0))}return r}case c.INT:{if(t.count===1)return n.getInt32(e+t.offset,!0);const r=[];for(let s=0;s<t.count;s++){const i=s*Int32Array.BYTES_PER_ELEMENT;r.push(n.getInt32(e+t.offset+i,!0))}return r}case c.UNSIGNED_INT:{if(t.count===1)return n.getUint32(e+t.offset,!0);const r=[];for(let s=0;s<t.count;s++){const i=s*Uint32Array.BYTES_PER_ELEMENT;r.push(n.getUint32(e+t.offset+i,!0))}return r}case c.FLOAT:{if(t.count===1)return n.getFloat32(e+t.offset,!0);const r=[];for(let s=0;s<t.count;s++){const i=s*Float32Array.BYTES_PER_ELEMENT;r.push(n.getFloat32(e+t.offset+i,!0))}return r}case c.HALF_FLOAT:{if(t.count===1)return m(n.getUint16(e+t.offset,!0));const r=[];for(let s=0;s<t.count;s++){const i=s*Uint16Array.BYTES_PER_ELEMENT;r.push(m(n.getUint16(e+t.offset+i,!0)))}return r}}}class A{constructor(t,e,r,s,i,a,o,u,h=[]){this.entityTexel=t,this.anchorX=e,this.anchorY=r,this.directionX=s,this.directionY=i,this.maxScale=a,this.minScale=o,this.referenceBounds=u,this.bounds=h}serialize(t){t.push(this.entityTexel),t.writeF32(this.anchorX),t.writeF32(this.anchorY),t.writeF32(this.directionX),t.writeF32(this.directionY),t.writeF32(this.maxScale),t.writeF32(this.minScale),this.referenceBounds===null?(t.writeF32(0),t.writeF32(0),t.writeF32(0)):(t.writeF32(this.referenceBounds.size),t.writeF32(this.referenceBounds.offsetX),t.writeF32(this.referenceBounds.offsetY)),I(t,this.bounds)}static deserialize(t){const e=t.readInt32(),r=t.readF32(),s=t.readF32(),i=t.readF32(),a=t.readF32(),o=t.readF32(),u=t.readF32(),h=t.readF32(),g=t.readF32(),w=t.readF32(),N=S(t,P)??[];return new A(e,r,s,i,a,o,u,{size:h,offsetX:g,offsetY:w},N)}}export{Q as A,Z as T,d as a,W as b,q as c,V as d,et as e,tt as f,nt as g,st as h,$ as j,S as n,rt as o,A as r,R as s,f as t,J as y};
