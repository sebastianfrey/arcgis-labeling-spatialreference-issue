import{dE as O,b as I,fl as M,fn as Z,fm as A,cR as C,fp as k,ah as B,fo as $,fq as P,fy as b,fz as g,fw as E,fB as w,fx as _,fA as D,fC as G,fD as L,fk as v,fE as z,cq as Q}from"./index-Cf67L9ml.js";import{t as W,n as U}from"./objectIdUtils-4dd1rf9p.js";import{u as H}from"./executeQueryForSnapping-BgCyr4gn.js";import{f as N}from"./FeatureStore-CAdir3Qf.js";import{x as T,j}from"./queryUtils-Dzi_OLlA.js";import{L as J}from"./QueryEngine-DE7UlV-e.js";import"./timeSupport-KKd82ums.js";import"./BoundsStore-DD7NTPbA.js";import"./PooledRBush-CHYIYmNu.js";import"./optimizedFeatureQueryEngineAdapter-D6HydSKn.js";import"./json-Wa8cmqdu.js";import"./WhereClauseCache-DXcU1dC-.js";import"./WhereClause-DHa9vWcw.js";import"./TimeOnly-C6mJFJAQ.js";import"./quantizationUtils-Bh1RVRcN.js";import"./utils-Bm0f6v9H.js";import"./utils-C6HuIF-b.js";import"./utils-B2lB-KCE.js";import"./ClassBreaksDefinition-CDPQqQWw.js";import"./SnappingCandidate-O5eRSE6e.js";import"./FixedIntervalBinParameters-DfqzMF7w.js";const V=v,K={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:v},X={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsQueryAttachmentOrderByFields:!1,supportsQueryBins:!0,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!0,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0,supportsQueryWithCacheHint:!0},queryBinsCapabilities:z};function Y(h){return Q(h)?h.z!=null:!!h.hasZ}function ee(h){return Q(h)?h.m!=null:!!h.hasM}class _e{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){var e;(e=this._queryEngine)==null||e.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e){const i=[],{features:a}=e,n=this._inferLayerProperties(a,e.fields),o=e.fields||[],d=e.hasM!=null?e.hasM:!!n.hasM,y=e.hasZ!=null?e.hasZ:!!n.hasZ,p=!e.spatialReference&&!n.spatialReference,u=p?V:e.spatialReference||n.spatialReference,m=p?K:null,f=e.geometryType||n.geometryType,l=!f;let t=e.objectIdField||n.objectIdField,r=e.timeInfo;const c=new O(o);if(!l&&(p&&i.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!f))throw new I("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!t)throw new I("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(n.objectIdField&&t!==n.objectIdField&&(i.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${t}" doesn't match the field name "${n.objectIdField}", found in the provided fields`}),t=n.objectIdField),t&&!n.objectIdField){const s=c.get(t);s?(t=s.name,s.type="esriFieldTypeOID",s.editable=!1,s.nullable=!1):o.unshift({alias:t,name:t,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const s of o){if(s.name==null&&(s.name=s.alias),s.alias==null&&(s.alias=s.name),!s.name)throw new I("feature-layer:invalid-field-name","field name is missing",{field:s});if(s.name===t&&(s.type="esriFieldTypeOID"),!M.jsonValues.includes(s.type))throw new I("feature-layer:invalid-field-type",`invalid type for field "${s.name}"`,{field:s});s.length==null&&(s.length=Z(s))}const F={};for(const s of o)if(s.type!=="esriFieldTypeOID"&&s.type!=="esriFieldTypeGlobalID"){const q=A(s);q!==void 0&&(F[s.name]=q)}if(r){if(r.startTimeField){const s=c.get(r.startTimeField);s?(r.startTimeField=s.name,s.type="esriFieldTypeDate"):r.startTimeField=null}if(r.endTimeField){const s=c.get(r.endTimeField);s?(r.endTimeField=s.name,s.type="esriFieldTypeDate"):r.endTimeField=null}if(r.trackIdField){const s=c.get(r.trackIdField);s?r.trackIdField=s.name:(r.trackIdField=null,i.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:r}}))}r.startTimeField||r.endTimeField||(i.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:r}}),r=null)}const x=c.dateFields.length?{timeZoneIANA:e.dateFieldsTimeZone??C}:null;this._createDefaultAttributes=k(F,t);const R={warnings:i,featureErrors:[],layerDefinition:{...X,drawingInfo:B(f),templates:$(F),extent:m,geometryType:f,objectIdField:t,fields:o,hasZ:y,hasM:d,timeInfo:r,dateFieldsTimeReference:x},assignedObjectIds:{}};if(this._queryEngine=new J({fieldsIndex:O.fromLayerJSON({fields:o,timeInfo:r,dateFieldsTimeReference:x}),geometryType:f,hasM:d,hasZ:y,objectIdField:t,spatialReference:u,featureStore:new N({geometryType:f,hasM:d,hasZ:y}),timeInfo:r}),!(a!=null&&a.length))return this._nextObjectId=W,R;const S=U(t,a);return this._nextObjectId=S+1,await T(a,u),this._loadInitialFeatures(R,a)}async applyEdits(e){const{spatialReference:i,geometryType:a}=this._queryEngine;return await Promise.all([P(i,a),T(e.adds,i),T(e.updates,i)]),this._applyEdits(e)}queryFeatures(e,i={}){return this._queryEngine.executeQuery(e,i.signal)}queryFeatureCount(e,i={}){return this._queryEngine.executeQueryForCount(e,i.signal)}queryObjectIds(e,i={}){return this._queryEngine.executeQueryForIds(e,i.signal)}queryExtent(e,i={}){return this._queryEngine.executeQueryForExtent(e,i.signal)}querySnapping(e,i={}){return H(this._queryEngine,e,i.signal)}queryAttributeBins(e,i={}){return this._queryEngine.executeAttributeBinsQuery(e,i.signal)}_inferLayerProperties(e,i){let a,n,o=null,d=null,y=null;for(const p of e){const u=p.geometry;if(u!=null&&(o||(o=b(u)),d||(d=u.spatialReference),a==null&&(a=Y(u)),n==null&&(n=ee(u)),o&&d&&a!=null&&n!=null))break}if(i&&i.length){let p=null;i.some(u=>{const m=u.type==="esriFieldTypeOID",f=!u.type&&u.name&&u.name.toLowerCase()==="objectid";return p=u,m||f})&&(y=p.name)}return{geometryType:o,spatialReference:d,objectIdField:y,hasM:n,hasZ:a}}async _loadInitialFeatures(e,i){const{geometryType:a,hasM:n,hasZ:o,objectIdField:d,spatialReference:y,featureStore:p,fieldsIndex:u}=this._queryEngine,m=[];for(const t of i){if(t.uid!=null&&(e.assignedObjectIds[t.uid]=-1),t.geometry&&a!==b(t.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const r=this._createDefaultAttributes(),c=E(u,r,t.attributes,!0);c?e.featureErrors.push(c):(this._assignObjectId(r,t.attributes,!0),t.attributes=r,t.uid!=null&&(e.assignedObjectIds[t.uid]=t.attributes[d]),t.geometry!=null&&(t.geometry=j(t.geometry,t.geometry.spatialReference,y)),m.push(t))}p.addMany(w([],m,a,o,n,d));const{fullExtent:f,timeExtent:l}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=f,l){const{start:t,end:r}=l;e.layerDefinition.timeInfo.timeExtent=[t,r]}return e}async _applyEdits(e){const{adds:i,updates:a,deletes:n}=e,o={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(i!=null&&i.length&&this._applyAddEdits(o,i),a!=null&&a.length&&this._applyUpdateEdits(o,a),n==null?void 0:n.length){for(const p of n)o.deleteResults.push(_(p));this._queryEngine.featureStore.removeManyById(n)}const{fullExtent:d,timeExtent:y}=await this._queryEngine.fetchRecomputedExtents();return{extent:d,timeExtent:y,featureEditResults:o}}_applyAddEdits(e,i){const{addResults:a}=e,{geometryType:n,hasM:o,hasZ:d,objectIdField:y,spatialReference:p,featureStore:u,fieldsIndex:m}=this._queryEngine,f=[];for(const l of i){if(l.geometry&&n!==b(l.geometry)){a.push(g("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),r=E(m,t,l.attributes);if(r)a.push(r);else{if(this._assignObjectId(t,l.attributes),l.attributes=t,l.uid!=null){const c=l.attributes[y];e.uidToObjectId[l.uid]=c}if(l.geometry!=null){const c=l.geometry.spatialReference??p;l.geometry=j(D(l.geometry,c),c,p)}f.push(l),a.push(_(l.attributes[y]))}}u.addMany(w([],f,n,d,o,y))}_applyUpdateEdits({updateResults:e},i){const{geometryType:a,hasM:n,hasZ:o,objectIdField:d,spatialReference:y,featureStore:p,fieldsIndex:u}=this._queryEngine;for(const m of i){const{attributes:f,geometry:l}=m,t=f==null?void 0:f[d];if(t==null){e.push(g(`Identifier field ${d} missing`));continue}if(!p.has(t)){e.push(g(`Feature with object id ${t} missing`));continue}const r=G(p.getFeature(t),a,o,n);if(l!=null){if(a!==b(l)){e.push(g("Incorrect geometry type."));continue}const c=l.spatialReference??y;r.geometry=j(D(l,c),c,y)}if(f){const c=E(u,r.attributes,f);if(c){e.push(c);continue}}p.add(L(r,a,o,n,d)),e.push(_(t))}}_assignObjectId(e,i,a=!1){const n=this._queryEngine.objectIdField;a&&i&&isFinite(i[n])?e[n]=i[n]:e[n]=this._nextObjectId++}}export{_e as default};
