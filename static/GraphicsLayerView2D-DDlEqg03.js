import{e9 as m,ea as c,aB as g,aV as n,G as l,cA as h,du as d,W as o,Z as w,ap as u}from"./index-Cf67L9ml.js";import{S as y,y as V}from"./LayerView-zDsSwpRo.js";import{t as v}from"./GraphicContainer-WHIVZJQR.js";import{A as f}from"./GraphicsView2D-HcogBZDJ.js";import"./Container-BEHKQm5A.js";import"./EffectView-CkK6NJdN.js";import"./layerViewUtils-BErokGJI.js";import"./AGraphicContainer-w4pGbbAI.js";import"./TechniqueInstance-CCmv-o_J.js";import"./UpdateTracking2D-CDp-gwTF.js";import"./GraphShaderModule-BenlGmbL.js";import"./Program-Dg5lKghI.js";import"./BufferObject-ea8Voym7.js";import"./LabelMetric-CH0T2PFZ.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CUQpoh07.js";import"./ShaderBuilder-j36oj-lW.js";import"./BindType-BBwFZqyN.js";import"./TileContainer-BYB7DZDc.js";import"./WGLContainer-DmY4afwL.js";import"./ProgramTemplate-COOfBGP4.js";import"./VertexArrayObject-s3q2lkkQ.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-C4puLFnb.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-BmnDBOIz.js";import"./CIMSymbolHelper-Cora_Njn.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-B55So5rc.js";import"./GeometryUtils-Cj1Ze3T6.js";import"./rasterizingUtils-heiW8PKS.js";import"./floatRGBA-18oZY0RD.js";import"./Rect-CUzevAry.js";import"./Technique-CLnQJYt5.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CZ3qTN3S.js";import"./OverrideHelper-zt5G9yD6.js";import"./colorUtils-BvMoCY37.js";import"./quantizationUtils-Bh1RVRcN.js";import"./AttributeStore-CLSxabNq.js";import"./queryUtils-Dzi_OLlA.js";import"./json-Wa8cmqdu.js";import"./timeSupport-KKd82ums.js";import"./TimeOnly-C6mJFJAQ.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-DU2_wHDB.js";import"./dehydratedFeatures-CnW_BW0R.js";let p=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>{var i;return(i=this.layer)==null?void 0:i.visible},()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):n.isCollection(i)&&i.length>0&&(r=i.map(s=>s&&s.uid).toArray());const e=r==null?void 0:r.filter(l);if(!(e!=null&&e.length))return h();const a=(t==null?void 0:t.name)??d;return this._addHighlights(e,a),h(()=>!this.destroyed&&this._removeHighlights(e,a))}_processHighlight(){var t;const i=this._getHighlights();(t=this.graphicsView)==null||t.setHighlight(i)}};o([w()],p.prototype,"graphicsView",void 0),p=o([u("esri.views.2d.layers.GraphicsLayerView2D")],p);const wi=p;export{wi as default};
