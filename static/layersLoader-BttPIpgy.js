import{b as y,N as S,O as T,P as v,d as F}from"./index-DKbcOXvO.js";import{a as M,t as P}from"./fetchService-Bem_A3LN.js";import{l as m,a as G,o as $,u as g,t as w,c as x,n as D,i as C,e as I}from"./loadUtils-dg5T89OJ.js";import{e as b}from"./jsonContext-GHE_62Qs.js";import"./associatedFeatureServiceUtils-CRG4c5Se.js";async function X(t,o){const r=t.instance.portalItem;if(r!=null&&r.id)return await r.load(o),k(t),t.validateItem&&t.validateItem(r),O(t,o)}function k(t){const o=t.instance.portalItem;if(!(o!=null&&o.type)||!t.supportedTypes.includes(o.type))throw new y("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:o==null?void 0:o.type,expectedType:t.supportedTypes.join(", ")})}async function O(t,o){const r=t.instance,e=r.portalItem;if(!e)return;const{url:s,title:a}=e,n=b(e,"portal-item");if(r.type==="group")return j(r,n,t);s&&r.type!=="media"&&r.read({url:s},n);const u=new I,i=await L(t,u,o);return i&&r.read(i,n),r.resourceReferences={portalItem:e,paths:n.readResourcePaths??[]},r.type!=="subtype-group"&&r.read({title:a},n),S(r,n)}async function j(t,o,r){const e=t.portalItem;if(!t.sourceIsPortalItem)return;const{title:s,type:a}=e;if(a==="Group Layer"){if(!T(e,"Map"))throw new y("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return A(t,r)}return t.read({title:s},o),E(t,r)}async function A(t,o){const r=t.portalItem,e=await r.fetchData("json");if(!e)return;if(!o.populateGroupLayer)throw new y("portal:missing-populate-group-layer","Missing populate group layer");const s=b(r,"web-map");t.read(e,s),await o.populateGroupLayer(t,e,{context:s}),t.resourceReferences={portalItem:r,paths:s.readResourcePaths??[]}}async function E(t,o){var c;let r;const{portalItem:e}=t;if(!e)return;const s=e.type,a=o.layerModuleTypeMap;if(!a)throw new y("portal:missing-layer-module-type-map","Layer module type map is required to construct sub layers");switch(s){case"Feature Service":case"Feature Collection":r=a.FeatureLayer;break;case"Stream Service":r=a.StreamLayer;break;case"Scene Service":r=a.SceneLayer;break;default:throw new y("portal:unsupported-item-type-as-group",`The item type '${s}' is not supported as a 'IGroupLayer'`)}const n=new I;let[u,i]=await Promise.all([r(),L(o,n)]),l=()=>u;if(s==="Feature Service"){const p=(c=m(i))==null?void 0:c.customParameters;i=e.url?await G(i,e.url,n):{},l=await H(i,a)||l;const d=await B(e.url,{customParameters:p,loadContext:n});return await f(t,l,l,i,a,d)}return s==="Scene Service"&&e.url&&(i=await $(e,i,n)),g(i)>0?await f(t,l,null,i,a):await N(t,l,a)}async function N(t,o,r){var a,n;const{portalItem:e}=t;if(!(e!=null&&e.url))return;const s=await M(e.url);s&&f(t,o,null,{layers:(a=s.layers)==null?void 0:a.map(w),tables:(n=s.tables)==null?void 0:n.map(w)},r)}async function f(t,o,r,e,s,a){var i;let n=e.layers||[];const u=e.tables||[];if(((i=t.portalItem)==null?void 0:i.type)==="Feature Collection"?(n.forEach((l,c)=>{var p;l.id=c,((p=l==null?void 0:l.layerDefinition)==null?void 0:p.type)==="Table"&&u.push(l)}),n=n.filter(l=>{var c;return((c=l==null?void 0:l.layerDefinition)==null?void 0:c.type)!=="Table"})):(n.reverse(),u.reverse()),n.forEach(l=>{const c=a==null?void 0:a(l);if(c||!a){const p=h(t,o(l),e,l,c);t.add(p)}}),u.length){const l=r?null:await s.FeatureLayer();u.forEach(c=>{const p=a==null?void 0:a(c);if(p||!a){const d=h(t,r?r(c):l,e,c,p);t.tables.add(d)}})}}function h(t,o,r,e,s){const a=t.portalItem,n={portalItem:a.clone(),layerId:e.id};e.url!=null&&(n.url=e.url);const u=new o(n);if("sourceJSON"in u&&(u.sourceJSON=s),u.type!=="subtype-group"&&u.type!=="catalog"&&(u.sublayerTitleMode="service-name"),a.type==="Feature Collection"){const i={origin:"portal-item",portal:a.portal||v.getDefault()};u.read(e,i);const l=r.showLegend;l!=null&&u.read({showLegend:l},i)}return u}async function L(t,o,r){if(t.supportsData===!1)return;const e=t.instance,s=e.portalItem;if(!s)return;let a=null;try{a=await s.fetchData("json",r)}catch{}if(q(e)){let n=null;const u=await R(s,a,o);if((a!=null&&a.layers||a!=null&&a.tables)&&u>0){if(e.layerId==null){const i=x(e.type),l=i!=null&&i.length?D(a,i)[0]:m(a);l&&(e.layerId=l.id)}n=J(a,e),(n==null?void 0:n.layerType)==="OrientedImageryLayer"&&e.type==="oriented-imagery"&&e.supportedSourceTypes.add("Feature Layer"),n&&a.showLegend!=null&&(n.showLegend=a.showLegend)}return u>1&&"sublayerTitleMode"in e&&e.sublayerTitleMode!=="service-name"&&(e.sublayerTitleMode="item-title-and-service-name"),n}return a}async function R(t,o,r){var a,n,u,i,l;if(o!=null&&o.layers&&(o!=null&&o.tables))return g(o);const e=F(t.url);if(!e)return 1;const s=await r.fetchServiceMetadata(e.url.path,{customParameters:(a=m(o))==null?void 0:a.customParameters}).catch(()=>null);return(((n=o==null?void 0:o.layers)==null?void 0:n.length)??((u=s==null?void 0:s.layers)==null?void 0:u.length)??0)+(((i=o==null?void 0:o.tables)==null?void 0:i.length)??((l=s==null?void 0:s.tables)==null?void 0:l.length)??0)}function J(t,o){var s,a;const{layerId:r}=o,e=((s=t.layers)==null?void 0:s.find(n=>n.id===r))||((a=t.tables)==null?void 0:a.find(n=>n.id===r));return e&&z(e,o)?e:null}function q(t){return t.type!=="stream"&&"layerId"in t}function z(t,o){const r="layerType"in t&&t.layerType,{type:e}=o;return!(e==="feature"&&r&&t.layerType!=="ArcGISFeatureLayer"||e==="catalog"&&!r||e==="oriented-imagery"&&!r||e==="subtype-group"&&!r)}async function B(t,o){const{layersJSON:r}=await P(t,o);if(!r)return null;const e=[...r.layers,...r.tables];return s=>e.find(a=>a.id===s.id)}async function H(t,o){const{layers:r,tables:e}=t,s=[...r??[],...e??[]];if(!s.length)return;const a=new Set,n=[];for(const{layerType:l}of s){const c=l??"ArcGISFeatureLayer";if(a.has(c))continue;a.add(c);const p=o[C(c)];n.push(p())}const u=await Promise.all(n),i=new Map;return Array.from(a).forEach((l,c)=>{i.set(l,u[c])}),({layerType:l})=>{const c=l??"ArcGISFeatureLayer";return i.get(c)}}export{X as load};
