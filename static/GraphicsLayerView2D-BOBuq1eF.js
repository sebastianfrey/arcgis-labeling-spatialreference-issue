import{e9 as m,ea as c,aB as g,aV as n,G as l,cA as h,du as d,W as o,Z as w,ap as u}from"./index-BFudLC3v.js";import{S as y,y as V}from"./LayerView-BFbj4cbk.js";import{t as v}from"./GraphicContainer-CWGNTUbi.js";import{A as f}from"./GraphicsView2D-DBcWvS9h.js";import"./Container-cpXLYO26.js";import"./EffectView-BWsWT5Ex.js";import"./layerViewUtils-B4pbvQOn.js";import"./AGraphicContainer-CHcFg8Wx.js";import"./TechniqueInstance-DUZJkAbd.js";import"./UpdateTracking2D-DEpZGwaF.js";import"./GraphShaderModule-Br7Mc9ee.js";import"./Program-BnRiu9Jn.js";import"./BufferObject-CpPfoGN6.js";import"./LabelMetric-D4A1Qpx6.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CdqmOd9a.js";import"./ShaderBuilder-C9rXjjS7.js";import"./BindType-BBwFZqyN.js";import"./TileContainer-Clr4cLMC.js";import"./WGLContainer-DqoEBBZm.js";import"./ProgramTemplate-mWljJ0Gj.js";import"./VertexArrayObject-CP7hxzKB.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-IBwlag_H.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-CgYMWU8U.js";import"./CIMSymbolHelper-CR6Aus0U.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-OnKrmk1k.js";import"./GeometryUtils-CaFOaic2.js";import"./rasterizingUtils-nHR3JRad.js";import"./floatRGBA-ol_XST_i.js";import"./Rect-CUzevAry.js";import"./Technique-BxlL133A.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-5m9Sycf7.js";import"./OverrideHelper-c-8qKlJ1.js";import"./colorUtils-CW8biUm0.js";import"./quantizationUtils-CJrsjolk.js";import"./AttributeStore-5EAedn8G.js";import"./queryUtils-DcjIa_4-.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CoalFIOZ.js";import"./TimeOnly-Cz5zu_49.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-yOPxH4gk.js";import"./dehydratedFeatures-CV_AL41U.js";let p=class extends y(V){attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new v(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),m(()=>{var i;return(i=this.layer)==null?void 0:i.visible},()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._processHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=c(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):n.isCollection(i)&&i.length>0&&(r=i.map(s=>s&&s.uid).toArray());const e=r==null?void 0:r.filter(l);if(!(e!=null&&e.length))return h();const a=(t==null?void 0:t.name)??d;return this._addHighlights(e,a),h(()=>!this.destroyed&&this._removeHighlights(e,a))}_processHighlight(){var t;const i=this._getHighlights();(t=this.graphicsView)==null||t.setHighlight(i)}};o([w()],p.prototype,"graphicsView",void 0),p=o([u("esri.views.2d.layers.GraphicsLayerView2D")],p);const wi=p;export{wi as default};
