import{aF as J,bq as B,l7 as C,W as i,Z as s,aq as H,e2 as W,dd as x,l8 as k,ap as E,aV as A,eB as G,a1 as D,eE as P,eA as U,l9 as Y,aa as Z,bk as j,ch as _,gl as I,dB as K,dW as Q,eP as X}from"./index-Cf67L9ml.js";import{c as ee,b as te}from"./featureReferenceUtils-D3n2VHtb.js";import{c as ie}from"./Analysis-CdvTlviB.js";import"./sphere-DX54r7eT.js";import"./mat3f64-q3fE-ZOt.js";import"./plane-DIsjDFau.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./IntersectorInterfaces-BgX4KEwK.js";import"./boundedPlane-DDgJuCNE.js";import"./lineSegment-BFb_0lpP.js";let o=class extends J.JSONSupportMixin(B){constructor(t){super(t),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}isValid(){return this.observer!=null&&this.farDistance>0}equals(t){return C(this.observer,t.observer)&&this.farDistance===t.farDistance&&this.heading===t.heading&&this.tilt===t.tilt&&this.horizontalFieldOfView===t.horizontalFieldOfView&&this.verticalFieldOfView===t.verticalFieldOfView&&ee(this.feature,t.feature)}};i([s({type:H,json:{write:{isRequired:!0}}})],o.prototype,"observer",void 0),i([s({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],o.prototype,"farDistance",void 0),i([s({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),W(e=>x.normalize(k(e),void 0,!0))],o.prototype,"heading",void 0),i([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],o.prototype,"tilt",void 0),i([s({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],o.prototype,"horizontalFieldOfView",void 0),i([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],o.prototype,"verticalFieldOfView",void 0),i([s(te)],o.prototype,"feature",void 0),i([s({json:{read:!1}})],o.prototype,"isValid",null),o=i([E("esri.analysis.Viewshed")],o);const S=o,z=A.ofType(S);let p=class extends ie{constructor(e){super(e),this.type="viewshed",this._extent=null}initialize(){this.addHandles(D(()=>this._computeExtent(),e=>{e.pending==null&&(this._extent=e.extent)},P))}get viewsheds(){return this._get("viewsheds")||new z}set viewsheds(e){this._set("viewsheds",U(e,this.viewsheds,z))}get spatialReference(){for(const e of this.viewsheds)if(e.observer!=null)return e.observer.spatialReference;return null}get extent(){return this._extent}get requiredPropertiesForEditing(){return this.viewsheds.items.map(({observer:e})=>e)}async waitComputeExtent(){const e=this._computeExtent();e.pending!=null&&await e.pending}_computeExtent(){const{spatialReference:e}=this;if(e==null)return{pending:null,extent:null};const t=this.viewsheds.filter(r=>r.observer!=null),y=t.map(r=>r.observer).toArray(),l=Y(y,e);return l.pending!=null?{pending:l.pending,extent:null}:{pending:null,extent:l.geometries.map((r,u)=>{const b=t.at(u);return r!=null&&b!=null?this._computeViewshedExtent(this.viewsheds.at(u),r):null}).filter(r=>r!=null).reduce((r,u)=>se(r,u),null)}}_computeViewshedExtent(e,t){const{farDistance:y,heading:l,tilt:r,horizontalFieldOfView:u,verticalFieldOfView:b}=e,{spatialReference:v}=t,V=u/2,O=b/2,$=y/v.metersPerUnit,L=[x.normalize(l-V),l,x.normalize(l+V)],d=Z.fromPoint(t),f=m=>{const h=L.map(a=>x.normalize(a-m));if(h[0]>h[2]||u===360)return $;const c=h.map(a=>Math.abs(a>180?360-a:a)).reduce((a,g)=>a>g?g:a);return c>90?0:$*Math.cos(j(c))};d.xmax+=f(90),d.xmin-=f(-90),d.ymax+=f(0),d.ymin-=f(180);const w=t.z;if(w!=null){let m=w,h=w;const c=r-90,a=_(c+O,-90,90),g=_(c-O,-90,90),N=v!=null&&v.isGeographic?y:$;m+=N*R(a),h+=N*R(g);const T=M(O)*N,q=R(c)*T*(1-M(V));r<90&&(m-=q),r>90&&(h-=q),d.zmax=Math.max(m,w),d.zmin=Math.min(h,w)}return d}clear(){this.viewsheds.removeAll()}};function se(e,t){return e==null?t:t==null?e:e.union(t)}function M(e){return Math.cos(j(e))}function R(e){return Math.sin(j(e))}i([s({type:["viewshed"]})],p.prototype,"type",void 0),i([s({cast:G,type:z,nonNullable:!0})],p.prototype,"viewsheds",null),i([s({readOnly:!0})],p.prototype,"spatialReference",null),i([s()],p.prototype,"_extent",void 0),i([s({readOnly:!0})],p.prototype,"extent",null),i([s({readOnly:!0})],p.prototype,"requiredPropertiesForEditing",null),p=i([E("esri.analysis.ViewshedAnalysis")],p);const F=p;let n=class extends I(K(X)){constructor(e){super(e),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new F,this.opacity=1}initialize(){this.addHandles(D(()=>this.source,(e,t)=>{t!=null&&t.parent===this&&(t.parent=null),e!=null&&(e.parent=this)},P))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(e){this.source===e&&(this.source=new F)}get analysis(){return this.source}set analysis(e){this.source=e}get viewsheds(){return this.source.viewsheds}set viewsheds(e){this.source.viewsheds=e}writeViewsheds(e,t,y,l){t.viewsheds=e.filter(r=>r.isValid()).map(r=>r.toJSON(l)).toJSON()}};i([s({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),i([s({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),i([s({type:F,nonNullable:!0})],n.prototype,"source",void 0),i([s({readOnly:!0})],n.prototype,"spatialReference",null),i([s({readOnly:!0})],n.prototype,"fullExtent",null),i([s({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),i([s({type:["show","hide"]})],n.prototype,"listMode",void 0),i([s({type:A.ofType(S),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),i([Q("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=i([E("esri.layers.ViewshedLayer")],n);const me=n;export{me as default};
