import{i as F}from"./CIMResourceManager-DazGbLyo.js";import{a as G,u as T,h as q}from"./CIMSymbolHelper-CR6Aus0U.js";import{y as A}from"./OverrideHelper-c-8qKlJ1.js";import{T as S,R as D}from"./rasterizingUtils-nHR3JRad.js";import{ht as z}from"./index-BFudLC3v.js";import"./fontUtils-OnKrmk1k.js";import"./BidiEngine-DNnuvc1i.js";import"./GeometryUtils-CaFOaic2.js";import"./Rect-CUzevAry.js";import"./BoundingBox-CdqmOd9a.js";import"./colorUtils-CW8biUm0.js";import"./quantizationUtils-CJrsjolk.js";import"./floatRGBA-ol_XST_i.js";const L=96/72;class ${constructor(m){this._spatialReference=m,this._imageDataCanvas=null,this._cimResourceManager=new F}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(m,r,s,M,I,a,c,l,y,p){if(!m)return null;const{data:w}=m;if(!w||w.type!=="CIMSymbolReference"||!w.symbol)return null;const{symbol:v}=w;a||(a=z(v));const o=await A.resolveSymbolOverrides(w,r,this._spatialReference,I,a,c,l),d=this._cimResourceManager,f=[];G.fetchResources(o,d,f),G.fetchFonts(o,d,f),f.length>0&&await Promise.all(f);const{width:e,height:h}=s;let b=k(a,e,h,M,p);const t=G.getEnvelope(o,b,d);if(!t)return null;t.x===1/0&&(t.x=e+2),t.y===1/0&&(t.y=-h/2),t.width===-1/0&&(t.width=e),t.height===-1/0&&(t.height=h);let g=1,_=0,C=0;switch(v.type){case"CIMPointSymbol":case"CIMTextSymbol":{let i=1;t.width>e&&(i=e/t.width);let n=1;t.height>h&&(n=h/t.height),M==="preview"&&(t.width<e&&(i=e/t.width),t.height<h&&(n=h/t.height)),g=Math.min(i,n),_=t.x+t.width/2,C=t.y+t.height/2}break;case"CIMLineSymbol":if(p){C=t.y+t.height/2,_=t.x+t.width/2;const i=t.width-e,n=t.height-h;b={paths:S(b.paths,{xmin:-1*t.width/2+i,xmax:t.width/2-i,ymin:-1*t.height/2+n,ymax:t.height/2-n,width:t.width-2*i,height:t.height-2*n})}}else{(y||t.height>h)&&(g=h/t.height),C=t.y+t.height/2;const i=t.x*g+e/2,n=(t.x+t.width)*g+e/2,{paths:R}=b;R[0][0][0]-=i/g,R[0][2][0]-=(n-e)/g}break;case"CIMPolygonSymbol":if(p){C=t.y+t.height/2,_=t.x+t.width/2;const i=t.width-e,n=t.height-h;b={paths:S(b.rings,{xmin:-1*t.width/2+i,xmax:t.width/2-i,ymin:-1*t.height/2+n,ymax:t.height/2-n,width:t.width-2*i,height:t.height-2*n})}}else{_=t.x+t.width/2,C=t.y+t.height/2;const i=t.x*g+e/2,n=(t.x+t.width)*g+e/2,R=t.y*g+h/2,P=(t.y+t.height)*g+h/2,{rings:u}=b;i<0&&(u[0][0][0]-=i,u[0][3][0]-=i,u[0][4][0]-=i),R<0&&(u[0][0][1]+=R,u[0][1][1]+=R,u[0][4][1]+=R),n>e&&(u[0][1][0]-=n-e,u[0][2][0]-=n-e),P>h&&(u[0][2][1]+=P-h,u[0][3][1]+=P-h)}}const E={type:"cim",data:{type:"CIMSymbolReference",symbol:o}};return this.rasterize(E,e,h,_,C,g,a,1,b)}rasterize(m,r,s,M,I,a,c,l=0,y=null,p=window.devicePixelRatio||1){const{data:w}=m;if(!w||w.type!=="CIMSymbolReference"||!w.symbol)return null;const{symbol:v}=w,o=this._canvas,d=p*L;o.width=r*d,o.height=s*d,c||(c=z(v)),y||(y=k(c,r,s,"legend")),o.width+=2*l,o.height+=2*l;const f=o.getContext("2d",{willReadFrequently:!0}),e=q.createIdentity();return e.translate(-M,-I),e.scale(a*d,-a*d),e.translate(r*d/2+l,s*d/2+l),f.clearRect(0,0,o.width,o.height),new T(f,this._cimResourceManager,e,!0).drawSymbol(v,y),f.getImageData(0,0,o.width,o.height)}}function O(x,m,r,s){return m==="esriGeometryPolygon"?{rings:D(S(x.rings,{xmin:0,ymin:0,xmax:r,ymax:s,width:r,height:s}),-1*r/2,-1*s/2)}:m==="esriGeometryPolyline"?{paths:D(S(x.paths,{xmin:0,ymin:0,xmax:r,ymax:s,width:r,height:s}),-1*r/2,-1*s/2)}:null}function k(x,m,r,s,M){const a=-m/2+1,c=m/2-1,l=r/2-1,y=-r/2+1;if(M&&(x==="esriGeometryPolygon"||x==="esriGeometryPolyline")){const p=O(M,x,m,r);if(p)return p}switch(x){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[a,0],[0,0],[c,0]]]};default:return s==="legend"?{rings:[[[a,l],[c,0],[c,y],[a,y],[a,l]]]}:{rings:[[[a,l],[c,l],[c,y],[a,y],[a,l]]]}}}export{$ as CIMSymbolRasterizer};
