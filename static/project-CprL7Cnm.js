import{ak as s,al as i,am as d,dk as h,fo as n,e9 as f,gB as g,au as S,dr as y,as as R,hG as w}from"./index-Dc2kMMi_.js";let o=class extends h{constructor(e){super(e),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map(a=>a.toJSON()),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:f(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],o.prototype,"geometries",void 0),s([i({json:{read:{source:"outSR"}}})],o.prototype,"outSpatialReference",void 0),s([i()],o.prototype,"transformation",void 0),s([i()],o.prototype,"transformForward",void 0),o=s([d("esri.rest.support.ProjectParameters")],o);const j=o,F=g(j);async function N(e,t,r){t=F(t);const a=S(e),p={...a.query,f:"json",...t.toJSON()},m=t.outSpatialReference,u=f(t.geometries[0]),c=y(p,r);return R(a.path+"/project",c).then(({data:{geometries:l}})=>w(l,u,m))}export{N as n,j as p};
