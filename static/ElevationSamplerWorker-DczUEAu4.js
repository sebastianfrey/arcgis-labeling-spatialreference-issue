import{a2 as f}from"./index-BFudLC3v.js";import{s as p}from"./PooledRBush-aVJcE4Zo.js";import{n as u}from"./MeshLocalVertexSpace-BtSCYr6y.js";import{B as l}from"./vertexSpaceConversion-BRCt4oVP.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./spatialReferenceEllipsoidUtils-CtUb4seQ.js";import"./computeTranslationToOriginAndRotation-CO062Ozn.js";import"./projectPointToVector-vOnznfs-.js";import"./meshVertexSpaceUtils-DPDdFFVl.js";import"./vec3-D4VoXKyn.js";import"./BufferView-CTWL5g6z.js";import"./vec4-BYRx93JH.js";class Y{async createIndex(o,n){var s;const r=new Array;if(!((s=o.vertexAttributes)!=null&&s.position))return new p;const e=d(o),i=n!=null?await n.invoke("createIndexThread",e,{transferList:r}):this.createIndexThread(e).result;return m().fromJSON(i)}createIndexThread(o){const n=m();if(!o)return{result:n.toJSON()};const r=new Float64Array(o.position);return o.components?h(n,r,o.components.map(e=>new Uint32Array(e))):x(n,r)}}function x(t,o){const n=new Array(o.length/9);let r=0;for(let e=0;e<o.length;e+=9)n[r++]=c(o,e,e+3,e+6);return t.load(n),{result:t.toJSON()}}function h(t,o,n){let r=0;for(const s of n)r+=s.length/3;const e=new Array(r);let i=0;for(const s of n)for(let a=0;a<s.length;a+=3)e[i++]=c(o,3*s[a],3*s[a+1],3*s[a+2]);return t.load(e),{result:t.toJSON()}}function d(t){var s;const{vertexAttributes:{position:o},vertexSpace:n,spatialReference:r,transform:e}=t,i=(s=l({vertexAttributes:{position:o},vertexSpace:n,spatialReference:r,transform:e},u.absolute,{allowBufferReuse:!0}))==null?void 0:s.position;return i?!t.components||t.components.some(a=>!a.faces)?{position:i.buffer}:{position:i.buffer,components:t.components.map(a=>a.faces)}:null}function m(){return new p(9,f("esri-csp-restrictions")?t=>t:[".minX",".minY",".maxX",".maxY"])}function c(t,o,n,r){return{minX:Math.min(t[o],t[n],t[r]),maxX:Math.max(t[o],t[n],t[r]),minY:Math.min(t[o+1],t[n+1],t[r+1]),maxY:Math.max(t[o+1],t[n+1],t[r+1]),p0:[t[o],t[o+1],t[o+2]],p1:[t[n],t[n+1],t[n+2]],p2:[t[r],t[r+1],t[r+2]]}}export{Y as default};
