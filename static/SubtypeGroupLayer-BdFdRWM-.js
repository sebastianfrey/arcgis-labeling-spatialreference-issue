const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./featureLayerUtils-C01FqSPR.js","./index-BFudLC3v.js","./index-C9zlu8m2.css","./originUtils-D69mHv66.js","./multiOriginJSONSupportUtils-C0wm8_Yw.js","./utils-B3S8YlHX.js","./jsonContext-D3A_acml.js","./saveUtils-h19FQVUC.js","./fetchService-BIeYlsCa.js","./FeatureLayerSource-C9esC34y.js","./MeshLocalVertexSpace-BtSCYr6y.js","./meshVertexSpaceUtils-DPDdFFVl.js","./External-C0IZzdmA.js","./applyEditsUtils-CxATyH-C.js","./MeshTransform-L5FzXYQf.js","./mat4f64-Dk4dwAN8.js","./quat-BxYdzspF.js","./mat3f64-q3fE-ZOt.js","./quatf64-aQ5IuZRd.js","./axisAngleDegrees-B8_3SZ7s.js","./editingSupport-DbItHUpj.js","./QueryTask-C3cQXD1B.js","./executeForIds-A6iBamGY.js","./query-DE9Vi8XE.js","./pbfQueryUtils-DFiURety.js","./pbf-BO7QTeVd.js","./executeQueryJSON-CmtcvRhO.js"])))=>i.map(i=>d[i]);
import{h1 as v,h2 as _,h3 as T,eL as $,gQ as E,eM as L,gk as I,gv as C,gl as O,gm as x,dB as P,gw as A,gx as q,bq as j,eP as D,aV as c,a0 as G,a1 as V,gO as R,aj as k,b as p,a3 as U,h4 as M,K as Q,ad as N,h5 as H,h6 as J,h7 as Z,h8 as B,h9 as z,_ as w,ha as K,dO as W,hb as Y,hc as X,hd as ee,he as te,gS as se,hf as re,ao as ie,hg as ae,fQ as oe,hh as ne,hi as le,hj as ue,hk as de,hl as h,gT as ye,hm as pe,hn as he,W as n,Z as l,gn as ce,ho as be,dR as me,ap as fe,hp as ge}from"./index-BFudLC3v.js";import{e as y,c as we,a as Se}from"./SubtypeSublayer-D45pFzxd.js";import"./colorUtils-CW8biUm0.js";import"./cimSymbolUtils-BZWniSJI.js";import"./utils-B90FjHHH.js";const u="SubtypeGroupLayer",Fe="esri.layers.SubtypeGroupLayer";function S(e,t){return new p("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}function F(e,t){const s=[];for(const i of e){const r=new y;r.read(i,t),s.push(r)}return s}const m=ge();function f(){return{name:"layerType",read:{enabled:!0},write:{enabled:!0,ignoreOrigin:!0,isRequired:!0}}}let a=class extends v(_(T($(E(L(I(C(O(x(P(A(q(j.ClonableMixin(D)))))))))))))){constructor(...e){super(...e),this._sublayerLookup=new Map,this.fields=null,this.fieldsIndex=null,this.outFields=null,this.sublayers=new(c.ofType(y)),this.useUniqueColorsForSublayers=!0,this.supportedSourceTypes=new Set(["Feature Layer","Table"]),this.timeInfo=null,this.title="Layer",this.type="subtype-group",this._debouncedSaveOperations=G(async(t,s,i)=>{const{save:r,saveAs:o}=await w(()=>import("./featureLayerUtils-C01FqSPR.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8]),import.meta.url);switch(t){case h.SAVE:return r(this,s);case h.SAVE_AS:return o(this,i,s)}}),this.addHandles(V(()=>this.sublayers,(t,s)=>this._handleSublayersChange(t,s),R))}destroy(){var e;(e=this.source)==null||e.destroy()}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){const t=e!=null?e.signal:null,s=this.loadFromPortal({supportedTypes:["Feature Service"]},e).catch(k).then(async()=>{if(!this.url)throw new p("subtype-grouplayer:missing-url-or-source","SubtypeGroupLayer must be created with either a url or a portal item");if(this.layerId==null)throw new p("subtype-grouplayer:missing-layerid","layerId is required for a SubtypeGroupLayer created with url");return this._initLayerProperties(await this.createGraphicsSource(t))}).then(()=>U(this,"load",e));return this.addResolvingPromise(s),Promise.resolve(this)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){return this.loaded&&this.capabilities!=null&&this.capabilities.operations.supportsEditing&&this.userHasEditingPrivileges}get effectiveEditingEnabled(){return M(this)}get operationalLayerType(){return this.isTable?"SubtypeGroupTable":"SubtypeGroupLayer"}get parsedUrl(){const e=Q(this.url);return e!=null&&this.layerId!=null&&(e.path=N(e.path,this.layerId.toString())),e}set source(e){this._get("source")!==e&&this._set("source",e)}readTitleFromService(e,{name:t}){return this.url?H(this.url,t):t}async addAttachment(e,t){const s=await J(this,e,t,u);return this.lastEditsEventDate=new Date,s}async updateAttachment(e,t,s){const i=await Z(this,e,t,s,u);return this.lastEditsEventDate=new Date,i}async applyEdits(e,t){return B(this,e,t)}on(e,t){return super.on(e,t)}async createGraphicsSource(e){const{default:t}=await z(w(()=>import("./FeatureLayerSource-C9esC34y.js"),__vite__mapDeps([9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]),import.meta.url),e);return new t({layer:this,supportedSourceTypes:this.supportedSourceTypes}).load({signal:e})}createQuery(){const e=K(this),t=this.sublayers.map(s=>s.subtypeCode);return e.where=W(`${this.subtypeField} IN (${t.join(",")})`,this.definitionExpression),e}async deleteAttachments(e,t){const s=await Y(this,e,t,u);return this.lastEditsEventDate=new Date,s}async fetchRecomputedExtents(e){return X(this,e,u)}findSublayerForFeature(e){const t=this.fieldsIndex.get(this.subtypeField),s=e.attributes[t.name];return this.findSublayerForSubtypeCode(s)}findSublayerForSubtypeCode(e){return this._sublayerLookup.get(e)}getFieldDomain(e,t){var i;if(!(t!=null&&t.excludeImpliedDomains)){const r=ee(this,e);if(r)return r}const s=te(this,t==null?void 0:t.feature);if(s){const r=(i=s.domains)==null?void 0:i[e];return(r==null?void 0:r.type)==="inherited"?this._getLayerDomain(e):r}return this._getLayerDomain(e)}loadAll(){return se(this,e=>{e(this.sublayers)})}async queryAttachments(e,t){return re(this,e,t,u)}async queryFeatures(e,t){const s=await this.load(),i=ie.from(e)??s.createQuery(),r=i.outFields??[];r.includes(this.subtypeField)||(r.push(this.subtypeField),i.outFields=r);const o=await s.source.queryFeatures(i,t);if(o!=null&&o.features)for(const d of o.features)d.layer=d.sourceLayer=this.findSublayerForFeature(d);return o}async queryObjectIds(e,t){return(await ae(this,e,t,u)).filter(oe)}async queryFeatureCount(e,t){return ne(this,e,t,u)}async queryExtent(e,t){return le(this,e,t,u)}async queryRelatedFeatures(e,t){return ue(this,e,t,u)}async queryRelatedFeaturesCount(e,t){return de(this,e,t,u)}async save(e){return this._debouncedSaveOperations(h.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(h.SAVE_AS,t,e)}write(e,t){var o;const{origin:s,layerContainerType:i,messages:r}=t;if(this.isTable){if(s==="web-scene"||s==="web-map"&&i!=="tables")return r==null||r.push(S(this,"using a table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&s==="web-map"&&i==="tables")return r==null||r.push(S(this,"using a non-table source cannot be written to tables in web maps")),null;return(o=this.sublayers)!=null&&o.length?super.write(e,t):(r==null||r.push(new p("web-document-write:invalid-property",`Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' has invalid value for 'sublayers' property. 'sublayers' collection should contain at least one sublayer`,{layer:this})),null)}serviceSupportsSpatialReference(e){return!!this.loaded&&ye(this,e)}async getFeatureTitle(e,t={timeZone:"system",fetchMissingFields:!1}){const s=this.findSublayerForFeature(e);return s?await s.getFeatureTitle(e,t):this.displayField&&this.fieldsIndex.has(this.displayField)?e.attributes[this.fieldsIndex.get(this.displayField).name]??"":this.objectIdField&&this.fieldsIndex.has(this.objectIdField)?e.attributes[this.fieldsIndex.get(this.objectIdField).name]??"":""}get requiredFeatureTitleFields(){const e=new Set;for(const t of this.sublayers){const s=t.featureTitleFields;for(const i of s)e.add(i)}return[...e]}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}async _initLayerProperties(e){var s;this._set("source",e);const{sourceJSON:t}=e;if(t&&(this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})),!((s=this.subtypes)!=null&&s.length))throw new p("subtype-grouplayer:missing-subtypes","SubtypeGroupLayer must be created using a layer with subtypes");this._verifyFields(),pe(this.timeInfo,this.fieldsIndex)}async hasDataChanged(){return he(this)}_verifyFields(){var t,s;const e=((t=this.parsedUrl)==null?void 0:t.path)??"undefined";this.objectIdField||console.log("SubtypeGroupLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||e.search(/\/FeatureServer\//i)!==-1||(s=this.fields)!=null&&s.some(i=>i.type==="geometry")||console.log("SubtypeGroupLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_handleSublayersChange(e,t){t&&(t.forEach(s=>{s.parent=null}),this.removeHandles("sublayers-owner"),this._sublayerLookup.clear()),e&&(e.forEach(s=>{s.parent=this,this._sublayerLookup.set(s.subtypeCode,s)}),this.addHandles([e.on("after-add",({item:s})=>{s.parent=this,this._sublayerLookup.set(s.subtypeCode,s)}),e.on("after-remove",({item:s})=>{s.parent=null,this._sublayerLookup.delete(s.subtypeCode)})],"sublayers-owner"))}};n([l({readOnly:!0})],a.prototype,"createQueryVersion",null),n([l({readOnly:!0})],a.prototype,"editingEnabled",null),n([l({readOnly:!0})],a.prototype,"effectiveEditingEnabled",null),n([l({...m.fields,readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],a.prototype,"fields",void 0),n([l(m.fieldsIndex)],a.prototype,"fieldsIndex",void 0),n([l(ce)],a.prototype,"id",void 0),n([l({type:["show","hide","hide-children"],json:{origins:{"portal-item":{read:!1,write:!1}}}})],a.prototype,"listMode",void 0),n([l({type:["SubtypeGroupLayer","SubtypeGroupTable"],json:{...f(),origins:{"web-document":f(),"portal-item":f()}}})],a.prototype,"operationalLayerType",null),n([l(m.outFields)],a.prototype,"outFields",void 0),n([l({readOnly:!0})],a.prototype,"parsedUrl",null),n([l({clonable:!1})],a.prototype,"source",null),n([l({type:c.ofType(y),json:{origins:{service:{read:{source:"subtypes",reader(e,t,s){let i=null;if(this.useUniqueColorsForSublayers){const o=we(t,s);i=o?Se(e.length,o):null}const r=e.map(({code:o},d)=>{const b=new y({subtypeCode:o});b.read(t,s);const g=i==null?void 0:i[d];return g&&b.read({drawingInfo:{renderer:g.toJSON()}},s),b});return new(c.ofType(y))(r)}}}},read:{source:["layers","tables"],reader(e,t,s){var r,o;let i;return t.layerType==="SubtypeGroupLayer"&&((r=t.layers)!=null&&r.length)?i=F(t.layers,s):t.layerType==="SubtypeGroupTable"&&((o=t.tables)!=null&&o.length)&&(i=F(t.tables,s)),new(c.ofType(y))(i)}},write:{ignoreOrigin:!0,writer(e,t,s,i){const r=[];for(const o of e){const d=o.write({},i);r.push(d)}this.isTable?t.tables=r:t.layers=r}}}})],a.prototype,"sublayers",void 0),n([l()],a.prototype,"useUniqueColorsForSublayers",void 0),n([l({type:be})],a.prototype,"timeInfo",void 0),n([l({json:{origins:{"portal-item":{write:{enabled:!0,ignoreOrigin:!0,writerEnsuresNonNull:!0}}}}})],a.prototype,"title",void 0),n([me("service","title",["name"])],a.prototype,"readTitleFromService",null),n([l({json:{read:!1}})],a.prototype,"type",void 0),n([l({clonable:!1,readOnly:!0})],a.prototype,"requiredFeatureTitleFields",null),a=n([fe(Fe)],a);const Le=a;export{Le as default};
