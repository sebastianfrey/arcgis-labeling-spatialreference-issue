const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./jsonConverter-D3y-txo_.js","./Transformation2D-DUa_jsnY.js","./ProjectionTransformation-D6glfMoL.js","./SimpleGeometryCursor-B92kdZ15.js","./index-Cf67L9ml.js","./index-C9zlu8m2.css"])))=>i.map(i=>d[i]);
import{_,ca as m,G as d}from"./index-Cf67L9ml.js";import{s as v,u as x,i as G,c as g}from"./operatorGeodesicBuffer-BzpPiz5t.js";import{e as l}from"./geodeticCurveType-CirnHLSB.js";import"./SimpleGeometryCursor-B92kdZ15.js";let c,y,f;function N(){return!!c&&v()}async function E(){if(!N()){const[t]=await Promise.all([_(()=>import("./jsonConverter-D3y-txo_.js"),__vite__mapDeps([0,1,2,3,4,5]),import.meta.url),x()]);c=t.fromGeometries,y=t.fromGeometry,f=t.toGeometry}}function L(t,o,s={}){let{curveType:n="geodesic",maxDeviation:e=NaN,unit:a}=s;a&&(o=m(o,a,"meters"),e&&(e=m(e,a,"meters")));const r=y(t),i=r.getSpatialReference();return f(G(r.getGeometry(),i,l[n],o,e),i)}function R(t,o,s={}){let{curveType:n="geodesic",maxDeviation:e=NaN,union:a=!1,unit:r}=s;r&&(o=o.map(u=>m(u,r,"meters")),e&&(e=m(e,r,"meters")));const[i,p]=c(t);return g(i,p,l[n],o,e,a).map(u=>f(u,p)).filter(d)}export{L as execute,R as executeMany,N as isLoaded,E as load};
