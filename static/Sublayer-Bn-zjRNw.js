const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./index-Cf67L9ml.js","./index-C9zlu8m2.css"])))=>i.map(i=>d[i]);
import{dB as V,dC as C,$ as M,b as p,a4 as N,aE as k,dD as B,dE as Q,dF as U,a2 as J,dG as K,d8 as G,ak as v,dH as T,bt as H,aV as W,dI as Z,dJ as O,dK as z,ao as X,_ as Y,dL as y,aQ as F,dM as ee,dN as te,dO as re,dP as ie,dQ as j,W as s,Z as l,dR as f,dS as ae,dT as se,aa as oe,dU as x,dV as le,dW as w,dX as ne,dY as ye,dZ as pe,d_ as ue,d$ as de,e0 as ce,e1 as A,ce as R,am as he,e2 as fe,e3 as be,ap as me,e4 as $}from"./index-Cf67L9ml.js";import{F as ge}from"./QueryTask-BYM8WCDd.js";var L;function P(e){return(e==null?void 0:e.type)==="esriSMS"}function _(e,t,r){var o;const i=this.originIdOf(t)>=$(r.origin);return{ignoreOrigin:!0,allowNull:i,enabled:!!r&&((o=r.layer)==null?void 0:o.type)==="map-image"&&(r.writeSublayerStructure||i)}}function q(e,t,r){var i;return{enabled:!!r&&((i=r.layer)==null?void 0:i.type)==="tile"&&(r.origin&&this.originIdOf(t)>=$(r.origin)||this._isOverridden(t))}}function m(e,t,r){return{ignoreOrigin:!0,enabled:r&&r.writeSublayerStructure||!1}}function D(e,t,r){return{ignoreOrigin:!0,enabled:!!(r!=null&&r.writeSublayerStructure)&&this.originIdOf(t)>y.SERVICE}}function E(e,t,r){return{ignoreOrigin:!0,enabled:!!r&&(r.writeSublayerStructure||this.originIdOf(t)>=$(r.origin))}}let Ie=0;const Se=new Set(["layer","parent","loaded","loadStatus","loadError","loadWarnings"]);let a=L=class extends V(C.IdentifiableMixin(M)){constructor(e){super(e),this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.isTable=!1,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.spatialReference=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:t,url:r}=this;if(!t&&!r)throw new p("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=t?await t.fetchSublayerInfo(this,e):(await N(r,{responseType:"json",query:{f:"json"},...e})).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service",layer:t,url:k(r)}))})()),this}readCapabilities(e,t){t=t.layerDefinition||t;const{attachment:r,operations:{supportsQuery:i,supportsQueryAttachments:o},query:{supportsFormatPBF:n,supportsOrderBy:c,supportsPagination:d},data:{supportsAttachment:b},queryRelated:h}=B(t,this.url);return{attachment:{supportsOrderByFields:(r==null?void 0:r.supportsOrderByFields)??!1,supportsResize:(r==null?void 0:r.supportsResize)??!1},exportMap:{supportsModification:!!t.canModifyLayer},operations:{supportsQuery:i,supportsQueryAttachments:o},data:{supportsAttachment:b},query:{supportsFormatPBF:n,supportsOrderBy:c,supportsPagination:d},queryRelated:h}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){const{minScale:e,maxScale:t}=this;return{minScale:e,maxScale:t}}readMaxScaleRange(e,t){return{minScale:(t=t.layerDefinition||t).minScale??0,maxScale:t.maxScale??0}}get fieldsIndex(){return new Q(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,t){if((t=t.layerDefinition||t).globalIdField)return t.globalIdField;if(t.fields){for(const r of t.fields)if(r.type==="esriFieldTypeGlobalID")return r.name}}get id(){return this._get("id")??Ie++}set id(e){var t,r,i;this._get("id")!==e&&(((i=(r=(t=this.layer)==null?void 0:t.capabilities)==null?void 0:r.exportMap)==null?void 0:i.supportsDynamicLayers)!==!1?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}readIsTable(e,t){return t.type==="Table"}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,t,r,i){e&&e.length&&(t.layerDefinition={drawingInfo:{labelingInfo:e.map(o=>o.write({},i))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){var t;this._set("layer",e),(t=this.sublayers)==null||t.forEach(r=>r.layer=e)}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,t){var r;return t.minScale||((r=t.layerDefinition)==null?void 0:r.minScale)||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,t){var r;return t.maxScale||((r=t.layerDefinition)==null?void 0:r.maxScale)||0}readObjectIdFieldFromService(e,t){var i;if((t=t.layerDefinition||t).objectIdField)return t.objectIdField;const r=(i=t.fields)==null?void 0:i.find(o=>o.type==="esriFieldTypeOID");return r==null?void 0:r.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,t){var i;const{layerDefinition:r}=t;return 1-.01*((r==null?void 0:r.transparency)??((i=r==null?void 0:r.drawingInfo)==null?void 0:i.transparency)??0)}writeOpacity(e,t,r,i){t.layerDefinition={drawingInfo:{transparency:100-100*e}}}set orderBy(e){this._setAndNotifyLayer("orderBy",e)}writeParent(e,t){this.parent&&this.parent!==this.layer?t.parentLayerId=U(this.parent.id):t.parentLayerId=-1}get queryTask(){var d;if(!this.layer)return null;const{capabilities:e,fieldsIndex:t,layer:r,url:i}=this,{spatialReference:o}=r,n="gdbVersion"in r?r.gdbVersion:void 0,c=J("featurelayer-pbf")&&(e==null?void 0:e.query.supportsFormatPBF);return new ge({fieldsIndex:t,gdbVersion:n,pbfSupported:c,queryAttachmentsSupported:((d=e==null?void 0:e.operations)==null?void 0:d.supportsQueryAttachments)??!1,sourceSpatialReference:o,url:i})}set renderer(e){if(K(e,this.fieldsIndex),e){for(const t of e.symbols)if(G(t)){v.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new T({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return H(W.ofType(L),e)}writeSublayers(e,t,r){var i;(i=this.sublayers)!=null&&i.length&&(t[r]=this.sublayers.map(o=>o.id).toArray().reverse())}readTitle(e,t){var r;return((r=t.layerDefinition)==null?void 0:r.name)??t.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const i=t.fields.find(o=>o.name.toLowerCase()===r);i&&(r=i.name)}return r}get url(){var i;const e=((i=this.layer)==null?void 0:i.parsedUrl)??this._lastParsedUrl,t=this.source;if(!e)return null;if(this._lastParsedUrl=e,(t==null?void 0:t.type)==="map-layer")return`${e.path}/${t.mapLayerId}`;const r={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${Z(r)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,t,r,i){t[r]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=O(this),t=new L;return O(t).store=e.clone(Se),this.commitProperty("url"),t._lastParsedUrl=this._lastParsedUrl,t}createPopupTemplate(e){return z(this,e)}createQuery(){return new X({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){var o;if(this.hasOwnProperty("sublayers"))return null;const e=(await Y(async()=>{const{default:n}=await import("./index-Cf67L9ml.js").then(c=>c.vS);return{default:n}},__vite__mapDeps([0,1]),import.meta.url)).default,{layer:t,url:r}=this;let i;if(r&&this.originIdOf("url")>y.SERVICE)i=new e({url:r});else{if(!(t!=null&&t.parsedUrl))throw new p("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const n=t.parsedUrl;i=new e({url:n.path}),n&&this.source&&(this.source.type==="map-layer"?i.layerId=this.source.mapLayerId:i.dynamicDataSource=this.source)}}return(t==null?void 0:t.refreshInterval)!=null&&(i.refreshInterval=t.refreshInterval),this.definitionExpression&&(i.definitionExpression=this.definitionExpression),this.floorInfo&&(i.floorInfo=F(this.floorInfo)),this.originIdOf("labelingInfo")>y.SERVICE&&(i.labelingInfo=F(this.labelingInfo)),this.originIdOf("labelsVisible")>y.DEFAULTS&&(i.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>y.DEFAULTS&&(i.legendEnabled=this.legendEnabled),this.originIdOf("visible")>y.DEFAULTS&&(i.visible=this.visible),this.originIdOf("minScale")>y.DEFAULTS&&(i.minScale=this.minScale),this.originIdOf("maxScale")>y.DEFAULTS&&(i.maxScale=this.maxScale),this.originIdOf("opacity")>y.DEFAULTS&&(i.opacity=this.opacity),this.originIdOf("popupTemplate")>y.DEFAULTS&&(i.popupTemplate=F(this.popupTemplate)),this.originIdOf("renderer")>y.SERVICE&&(i.renderer=F(this.renderer)),((o=this.source)==null?void 0:o.type)==="data-layer"&&(i.dynamicDataSource=this.source.clone()),this.originIdOf("title")>y.DEFAULTS&&(i.title=this.title),(t==null?void 0:t.type)==="map-image"&&t.originIdOf("customParameters")>y.DEFAULTS&&(i.customParameters=t.customParameters),(t==null?void 0:t.type)==="tile"&&t.originIdOf("customParameters")>y.DEFAULTS&&(i.customParameters=t.customParameters),i}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){return ee(this.types,this.typeIdField,e)}getFieldDomain(e,t){const r=t==null?void 0:t.feature,i=this.getFeatureType(r);if(i){const o=i.domains&&i.domains[e];if(o&&o.type!=="inherited")return o}return this._getLayerDomain(e)}async queryAttachments(e,t){var g,u,I,S;await this.load(),e=te.from(e);const r=this.capabilities;if(!((g=r==null?void 0:r.data)!=null&&g.supportsAttachment))throw new p("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:o,globalIds:n,num:c,size:d,start:b,where:h}=e;if(!((u=r==null?void 0:r.operations)!=null&&u.supportsQueryAttachments)&&((i==null?void 0:i.length)>0||(n==null?void 0:n.length)>0||(d==null?void 0:d.length)>0||c||b||h))throw new p("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(o!=null&&o.length||n!=null&&n.length||h))throw new p("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return!((I=r==null?void 0:r.attachment)!=null&&I.supportsOrderByFields)&&((S=e.orderByFields)!=null&&S.length)&&((e=e.clone()).orderByFields=null),this.queryTask.executeAttachmentQuery(e,t)}async queryFeatureCount(e=this.createQuery(),t){var i,o;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new p("queryFeatureCount:not-supported","this layer doesn't support queries.");if(!this.url)throw new p("queryFeatureCount:not-supported","this layer has no url.");const r=(i=this.layer)==null?void 0:i.apiKey;return await this.queryTask.executeForCount(e,{...t,query:{...(o=this.layer)==null?void 0:o.customParameters,token:r}})}async queryFeatures(e=this.createQuery(),t){var i,o;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new p("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new p("queryFeatures:not-supported","this layer has no url.");const r=await this.queryTask.execute(e,{...t,query:{...(i=this.layer)==null?void 0:i.customParameters,token:(o=this.layer)==null?void 0:o.apiKey}});if(r!=null&&r.features)for(const n of r.features)n.sourceLayer=this;return r}async queryObjectIds(e=this.createQuery(),t){var i,o;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new p("queryObjectIds:not-supported","this layer doesn't support queries.");if(!this.url)throw new p("queryObjectIds:not-supported","this layer has no url.");const r=(i=this.layer)==null?void 0:i.apiKey;return await this.queryTask.executeForIds(e,{...t,query:{...(o=this.layer)==null?void 0:o.customParameters,token:r}})}async queryRelatedFeatures(e,t){var i,o;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new p("queryRelatedFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new p("queryRelatedFeatures:not-supported","this layer has no url.");const r=(i=this.layer)==null?void 0:i.apiKey;return await this.queryTask.executeRelationshipQuery(e,{...t,query:{...(o=this.layer)==null?void 0:o.customParameters,token:r}})}async queryRelatedFeaturesCount(e,t){var i,o;if(await this.load(),!this.capabilities.operations.supportsQuery)throw new p("queryRelatedFeaturesCount:not-supported","this layer doesn't support queries.");if(!this.capabilities.queryRelated.supportsCount)throw new p("queryRelatedFeaturesCount:not-supported","this layer doesn't support query related counts.");if(!this.url)throw new p("queryRelatedFeaturesCount:not-supported","this layer has no url.");const r=(i=this.layer)==null?void 0:i.apiKey;return await this.queryTask.executeRelationshipQueryForCount(e,{...t,query:{...(o=this.layer)==null?void 0:o.customParameters,token:r}})}toExportImageJSON(e){var n,c,d,b,h,g;const t={id:this.id,source:((n=this.source)==null?void 0:n.toJSON())||{mapLayerId:this.id,type:"mapLayer"}},r=re(e,this.definitionExpression);r!=null&&(t.definitionExpression=r);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((u,I)=>(u[I]=this.originIdOf(I),u),{});if(Object.keys(i).some(u=>i[u]>y.SERVICE)){const u=t.drawingInfo={};if(i.renderer>y.SERVICE&&(u.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>y.SERVICE&&(u.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>y.SERVICE)if(this.labelingInfo){!this.loaded&&((c=this.labelingInfo)!=null&&c.some(S=>!S.labelPlacement))&&v.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let I=this.labelingInfo;this.geometryType!=null&&(I=ie(this.labelingInfo,j.toJSON(this.geometryType))),u.showLabels=!0,u.labelingInfo=I.filter(S=>S.labelPlacement).map(S=>S.toJSON({origin:"service",layer:this.layer}))}else u.showLabels=!1;i.opacity>y.SERVICE&&(u.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(u.renderer)}return(((h=(b=(d=this.layer)==null?void 0:d.capabilities)==null?void 0:b.exportMap)==null?void 0:h.supportsSublayerOrderBy)??!1)&&this.originIdOf("orderBy")>y.SERVICE&&(t.orderBy=((g=this.orderBy)==null?void 0:g.map(u=>u.toJSON()))??null),t}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,t=>{var r;t.color||t.style!=="esriSMSX"&&t.style!=="esriSMSCross"||((r=t.outline)!=null&&r.color?t.color=t.outline.color:t.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(e,t){if(e){const r=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const i of r)P(i.symbol)&&t(i.symbol);"symbol"in e&&P(e.symbol)&&t(e.symbol),"defaultSymbol"in e&&P(e.defaultSymbol)&&t(e.defaultSymbol)}}_setAndNotifyLayer(e,t){var d,b,h,g;const r=this.layer,i=this._get(e);let o,n;switch(e){case"definitionExpression":case"floorInfo":o="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":o="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":o="supportsDynamicLayers",n="supportsModification";break;case"orderBy":o="supportsSublayerOrderBy",n="supportsModification"}const c=O(this).getDefaultOrigin();if(c!=="service"){if(o&&((h=(b=(d=this.layer)==null?void 0:d.capabilities)==null?void 0:b.exportMap)==null?void 0:h[o])===!1)return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${o}'`);if(n&&((g=this.capabilities)==null?void 0:g.exportMap[n])===!1)return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${n}'`)}e!=="source"||this.loadStatus==="not-loaded"?(this._set(e,t),c!=="service"&&i!==t&&r&&r.emit&&r.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,t){t&&(t.forEach(r=>{r.parent=null,r.layer=null}),this.removeAllHandles()),e&&(e.forEach(r=>{r.parent=this,r.layer=this.layer}),this.addHandles([e.on("after-add",({item:r})=>{r.parent=this,r.layer=this.layer}),e.on("after-remove",({item:r})=>{r.parent=null,r.layer=null}),e.on("before-changes",r=>{var i,o,n;(((n=(o=(i=this.layer)==null?void 0:i.capabilities)==null?void 0:o.exportMap)==null?void 0:n.supportsSublayersChanges)??1)||(v.getLogger(this).error(new p("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),r.preventDefault())})]))}_logLockedError(e,t){const{layer:r,declaredClass:i}=this;v.getLogger(i).error(new p("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${r==null?void 0:r.id}'`,{reason:t,sublayer:this,layer:r}))}_getLayerDomain(e){var t;return((t=this.fieldsIndex.get(e))==null?void 0:t.domain)??null}};a.test={isMapImageLayerOverridePolicy:e=>e===D||e===m||e===_,isTileImageLayerOverridePolicy:e=>e===q},s([l({readOnly:!0})],a.prototype,"capabilities",void 0),s([f("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],a.prototype,"readCapabilities",null),s([l()],a.prototype,"defaultPopupTemplate",null),s([l({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:_}}})],a.prototype,"definitionExpression",null),s([l({readOnly:!0})],a.prototype,"effectiveScaleRange",null),s([f("service","maxScaleRange",["minScale","maxScale"])],a.prototype,"readMaxScaleRange",null),s([l({type:[ae],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],a.prototype,"fields",void 0),s([l({readOnly:!0})],a.prototype,"fieldsIndex",null),s([l({type:se,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:_},origins:{"web-scene":{read:!1,write:!1}}}})],a.prototype,"floorInfo",null),s([l({type:oe,json:{read:{source:"layerDefinition.extent"}}})],a.prototype,"fullExtent",void 0),s([l({type:j.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:j.read}}}}})],a.prototype,"geometryType",void 0),s([l({type:String})],a.prototype,"globalIdField",void 0),s([f("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],a.prototype,"readGlobalIdFieldFromService",null),s([l({type:x,json:{write:{ignoreOrigin:!0}}})],a.prototype,"id",null),s([l({readOnly:!0})],a.prototype,"isTable",void 0),s([f("service","isTable",["type"])],a.prototype,"readIsTable",null),s([l({value:null,type:[le],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:D}}})],a.prototype,"labelingInfo",null),s([w("labelingInfo")],a.prototype,"writeLabelingInfo",null),s([l({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:m}}})],a.prototype,"labelsVisible",null),s([l({value:null})],a.prototype,"layer",null),s([l({type:String,json:{write:{overridePolicy:q}}})],a.prototype,"layerItemId",void 0),s([l({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:E}}})],a.prototype,"legendEnabled",void 0),s([l({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],a.prototype,"listMode",null),s([l({type:Number,value:0,json:{write:{overridePolicy:m}}})],a.prototype,"minScale",null),s([f("minScale",["minScale","layerDefinition.minScale"])],a.prototype,"readMinScale",null),s([l({type:Number,value:0,json:{write:{overridePolicy:m}}})],a.prototype,"maxScale",null),s([f("maxScale",["maxScale","layerDefinition.maxScale"])],a.prototype,"readMaxScale",null),s([l()],a.prototype,"objectIdField",void 0),s([f("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],a.prototype,"readObjectIdFieldFromService",null),s([l({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:m}}})],a.prototype,"opacity",null),s([f("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],a.prototype,"readOpacity",null),s([w("opacity")],a.prototype,"writeOpacity",null),s([l({value:null,type:[ne],json:{name:"layerDefinition.orderBy",read:{reader:ye}}})],a.prototype,"orderBy",null),s([l({json:{type:x,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:m}}})],a.prototype,"parent",void 0),s([w("parent")],a.prototype,"writeParent",null),s([l({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:E,writer(e,t,r){t[r]=!e}}}})],a.prototype,"popupEnabled",void 0),s([l({type:pe,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:E}}})],a.prototype,"popupTemplate",void 0),s([l({readOnly:!0})],a.prototype,"queryTask",null),s([l({type:[ue],readOnly:!0,json:{origins:{service:{read:{source:"layerDefinition.relationships"}}}}})],a.prototype,"relationships",void 0),s([l({types:de,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:D},origins:{"web-scene":{types:ce,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:D}}}}})],a.prototype,"renderer",null),s([l({types:{key:"type",base:null,typeMap:{"data-layer":A,"map-layer":T}},cast(e){if(e){if("mapLayerId"in e)return R(T,e);if("dataSource"in e)return R(A,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:m}}})],a.prototype,"source",null),s([l()],a.prototype,"sourceJSON",void 0),s([l({type:he,json:{origins:{service:{read:{source:"layerDefinition.extent.spatialReference"}}}}})],a.prototype,"spatialReference",void 0),s([l({value:null,json:{type:[x],write:{target:"subLayerIds",allowNull:!0,overridePolicy:m}}})],a.prototype,"sublayers",null),s([fe("sublayers")],a.prototype,"castSublayers",null),s([w("sublayers")],a.prototype,"writeSublayers",null),s([l({type:String,json:{name:"name",write:{overridePolicy:E}}})],a.prototype,"title",void 0),s([f("service","title",["name","layerDefinition.name"])],a.prototype,"readTitle",null),s([l({type:String})],a.prototype,"typeIdField",void 0),s([l({json:{read:!1},readOnly:!0,value:"sublayer"})],a.prototype,"type",void 0),s([f("typeIdField",["layerDefinition.typeIdField"])],a.prototype,"readTypeIdField",null),s([l({type:[be],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],a.prototype,"types",void 0),s([l({type:String,json:{name:"layerUrl",write:{overridePolicy:q}}})],a.prototype,"url",null),s([l({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:m}}})],a.prototype,"visible",null),s([w("visible")],a.prototype,"writeVisible",null),a=L=s([me("esri.layers.support.Sublayer")],a);const Fe=a;export{Fe as s};
