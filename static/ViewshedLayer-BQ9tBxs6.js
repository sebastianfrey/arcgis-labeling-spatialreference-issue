import{eM as S,ks as C,ak as t,al as s,ao as H,fG as J,iY as b,kt as U,am as j,ku as X,aF as P,d7 as Y,cD as k,i5 as A,d6 as B,kv as I,c3 as K,gw as E,bG as q,eP as Q,eR as W,fm as Z,di as ee}from"./index-BPaEurMl.js";import{c as te,b as ie}from"./featureReferenceUtils-_fJz7yjv.js";import{c as se}from"./Analysis-Cwe52mol.js";import"./sphere-aHz4UbGv.js";import"./mat3f64-q3fE-ZOt.js";import"./plane-i1IA_Nu9.js";import"./mat4f64-CSKppSlJ.js";import"./quatf64-aQ5IuZRd.js";import"./IntersectorInterfaces-dI_rFEZm.js";import"./boundedPlane-BWOWeHqf.js";import"./lineSegment-bsrbxZrr.js";let a=class extends S(X){constructor(e){super(e),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}isValid(){return this.observer!=null&&this.farDistance>0}equals(e){return C(this.observer,e.observer)&&this.farDistance===e.farDistance&&this.heading===e.heading&&this.tilt===e.tilt&&this.horizontalFieldOfView===e.horizontalFieldOfView&&this.verticalFieldOfView===e.verticalFieldOfView&&te(this.feature,e.feature)}};t([s({type:H,json:{write:!0}})],a.prototype,"observer",void 0),t([s({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],a.prototype,"farDistance",void 0),t([s({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),J(i=>b.normalize(U(i),void 0,!0))],a.prototype,"heading",void 0),t([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"tilt",void 0),t([s({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],a.prototype,"horizontalFieldOfView",void 0),t([s({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],a.prototype,"verticalFieldOfView",void 0),t([s(ie)],a.prototype,"feature",void 0),t([s({json:{read:!1}})],a.prototype,"isValid",null),a=t([j("esri.analysis.Viewshed")],a);const L=a,F=P.ofType(L);let p=class extends se{constructor(e){super(e),this.type="viewshed",this._extent=null}initialize(){this.addHandles(k(()=>this._computeExtent(),e=>{e.pending==null&&(this._extent=e.extent)},A))}get viewsheds(){return this._get("viewsheds")||new F}set viewsheds(e){this._set("viewsheds",B(e,this.viewsheds,F))}get spatialReference(){for(const e of this.viewsheds)if(e.observer!=null)return e.observer.spatialReference;return null}get extent(){return this._extent}get requiredPropertiesForEditing(){return this.viewsheds.items.map(({observer:e})=>e)}async waitComputeExtent(){const e=this._computeExtent();e.pending!=null&&await e.pending}_computeExtent(){const{spatialReference:e}=this;if(e==null)return{pending:null,extent:null};const u=this.viewsheds.filter(r=>r.observer!=null),y=u.map(r=>r.observer).toArray(),o=I(y,e);return o.pending!=null?{pending:o.pending,extent:null}:{pending:null,extent:o.geometries.map((r,d)=>{const V=u.at(d);return r!=null&&V!=null?this._computeViewshedExtent(this.viewsheds.at(d),r):null}).filter(r=>r!=null).reduce((r,d)=>re(r,d),null)}}_computeViewshedExtent(e,u){const{farDistance:y,heading:o,tilt:r,horizontalFieldOfView:d,verticalFieldOfView:V}=e,{spatialReference:f}=u,O=d/2,$=V/2,R=y/f.metersPerUnit,T=[b.normalize(o-O),o,b.normalize(o+O)],h=K.fromPoint(u),g=v=>{const c=T.map(l=>b.normalize(l-v));if(c[0]>c[2]||d===360)return R;const w=c.map(l=>Math.abs(l>180?360-l:l)).reduce((l,x)=>l>x?x:l);return w>90?0:R*Math.cos(E(w))};h.xmax+=g(90),h.xmin-=g(-90),h.ymax+=g(0),h.ymin-=g(180);const m=u.z;if(m!=null){let v=m,c=m;const w=r-90,l=q(w+$,-90,90),x=q(w-$,-90,90),z=f!=null&&f.isGeographic?y:R;v+=z*N(l),c+=z*N(x);const G=M($)*z,_=N(w)*G*(1-M(O));r<90&&(v-=_),r>90&&(c-=_),h.zmax=Math.max(v,m),h.zmin=Math.min(c,m)}return h}clear(){this.viewsheds.removeAll()}};function re(i,e){return i==null?e:e==null?i:i.union(e)}function M(i){return Math.cos(E(i))}function N(i){return Math.sin(E(i))}t([s({type:["viewshed"]})],p.prototype,"type",void 0),t([s({cast:Y,type:F,nonNullable:!0})],p.prototype,"viewsheds",null),t([s({readOnly:!0})],p.prototype,"spatialReference",null),t([s()],p.prototype,"_extent",void 0),t([s({readOnly:!0})],p.prototype,"extent",null),t([s({readOnly:!0})],p.prototype,"requiredPropertiesForEditing",null),p=t([j("esri.analysis.ViewshedAnalysis")],p);const D=p;let n=class extends Q(W(ee)){constructor(i){super(i),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new D,this.opacity=1}initialize(){this.addHandles(k(()=>this.source,(i,e)=>{e!=null&&e.parent===this&&(e.parent=null),i!=null&&(i.parent=this)},A))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(i){this.source===i&&(this.source=new D)}get analysis(){return this.source}set analysis(i){this.source=i}get viewsheds(){return this.source.viewsheds}set viewsheds(i){this.source.viewsheds=i}writeViewsheds(i,e,u,y){e.viewsheds=i.filter(o=>o.isValid()).map(o=>o.toJSON(y)).toJSON()}};t([s({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),t([s({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),t([s({nonNullable:!0})],n.prototype,"source",void 0),t([s({readOnly:!0})],n.prototype,"spatialReference",null),t([s({readOnly:!0})],n.prototype,"fullExtent",null),t([s({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),t([s({type:["show","hide"]})],n.prototype,"listMode",void 0),t([s({type:P.ofType(L),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),t([Z("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=t([j("esri.layers.ViewshedLayer")],n);const fe=n;export{fe as default};
